<?xml version="1.0" encoding="utf-8"?>
<package displayname="Order Summary Items" version="2.1" allowengine="true" includeentityhelper="false" debug="false">

  <!-- ###################################################################################################### -->
  <!-- Licensed by Interprise Solutions.					                          -->
  <!-- http://www.InterpriseSolutions.com														                                          -->
  <!-- For details on this license please visit  the product homepage at the URL above.		                    -->
  <!-- THE ABOVE NOTICE MUST REMAIN INTACT.                                                                   -->
  <!-- ###################################################################################################### -->

  <!--<XmlHelperPackage name="page.checkout.ordersummaryitems.xml.config" />-->

  <PackageTransform debug="false">
    <xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" xmlns:ise="urn:ise" exclude-result-prefixes="ise">
      <xsl:output method="html" omit-xml-declaration="yes" />

      <xsl:variable name="RenderType" select="FIELD/RENDERTYPE" />
      <xsl:variable name="VatEnabled" select="FIELD/VATENABLED" />
      <xsl:variable name="VatInclusive" select="FIELD/VATINCLUSIVE" />
      <xsl:variable name="HasCoupon" select="FIELD/HASCOUPON" />
      <xsl:variable name="IsCouponTypeOrders" select="FIELD/IS_COUPON_TYPE_ORDERS" />
      <xsl:variable name="IsFreeShipping" select="FIELD/ISFREESHIPPING" />
      <xsl:variable name="ShowStockHints" select="FIELD/SHOWSTOCKHINTS" />
      <xsl:variable name="ShowShipDateInCart" select="FIELD/SHOWSHIPDATEINCART" />
      <xsl:variable name="ShowTaxBreakDown" select="FIELD/SHOW_TAX_BREAK_DOWN"/>
      <xsl:variable name="DecimalPlaces" select="ise:GetInventoryPreferencePlaces()"/>
      <xsl:variable name="ShowPicInCart" select="FIELD/SHOWPICINCART"/>
      <xsl:variable name="ShowLinkBack" select="FIELD/SHOWLINKBACK"/>
      
      <xsl:template match="/">
      


        
        <div id="order-summary-items-container">
         
            <xsl:for-each select="FIELD/CART_ITEMS">
              
                <xsl:choose>
                  <!--Non Bundle Items-->
                  <xsl:when test="ITEM/BUNDLECODE = ''">
                    <xsl:for-each select="ITEM">
                      
                        <xsl:call-template name="CartItemTemplate">
                          <xsl:with-param name="ItemType" select="current()/ITEMTYPE" />
                          <xsl:with-param name="ItemCode" select="current()/ITEMCODE" />
                          <xsl:with-param name="IsOutOfStock" select="current()/ISOUTOFSTOCK" />
                          <xsl:with-param name="CartStatus" select="current()/CARTSTATUS" />
                          <xsl:with-param name="AllocQty" select="current()/ALLOCQTY" />
                          <xsl:with-param name="ReserveCol" select="current()/RESERVECOL" />
                          <xsl:with-param name="IsCBNItem" select="current()/ISCBNITEM" />
                          <xsl:with-param name="IsDropShip" select="current()/ISDROPSHIP" />
                          <xsl:with-param name="ItemNotes" select="current()/PRODUCTNOTES" />
                          <xsl:with-param name="RenderType" select="$RenderType" />
                          <xsl:with-param name="VatEnabled" select="$VatEnabled" />
                          <xsl:with-param name="VatInclusive" select="$VatInclusive" />
                          <xsl:with-param name="HasCoupon" select="$HasCoupon" />
                          <xsl:with-param name="IsCouponTypeOrders" select="$IsCouponTypeOrders" />
                          <xsl:with-param name="IsFreeShipping" select="$IsFreeShipping" />
                          <xsl:with-param name="ShowStockHints" select="$ShowStockHints" />
                          <xsl:with-param name="ShowShipDateInCart" select="$ShowShipDateInCart" />
                          <xsl:with-param name="ShowTaxBreakDown" select="$ShowTaxBreakDown" />
                          <xsl:with-param name="DecimalPlaces" select="$DecimalPlaces" />
                          <xsl:with-param name="ShowPicInCart" select="$ShowPicInCart" />
                          <xsl:with-param name="ShowLinkBack" select="$ShowLinkBack" />

                        
                        </xsl:call-template>
                      
                    
                    </xsl:for-each>
                  </xsl:when>
                
                  <!--Bundle Items-->
                  <xsl:otherwise>
                     
                      <xsl:call-template name="CartItemTemplate">
                        <xsl:with-param name="ItemType" select="current()/ITEMTYPE" />
                        <xsl:with-param name="ItemCode" select="current()/ITEMCODE" />
                        <xsl:with-param name="IsOutOfStock" select="current()/ISOUTOFSTOCK" />
                        <xsl:with-param name="CartStatus" select="current()/CARTSTATUS" />
                        <xsl:with-param name="AllocQty" select="current()/ALLOCQTY" />
                        <xsl:with-param name="ReserveCol" select="current()/RESERVECOL" />
                        <xsl:with-param name="IsCBNItem" select="current()/ISCBNITEM" />
                        <xsl:with-param name="IsDropShip" select="current()/ISDROPSHIP" />
                        <xsl:with-param name="ItemNotes" select="current()/PRODUCTNOTES" />
                        <xsl:with-param name="RenderType" select="$RenderType" />
                        <xsl:with-param name="VatEnabled" select="$VatEnabled" />
                        <xsl:with-param name="VatInclusive" select="$VatInclusive" />
                        <xsl:with-param name="HasCoupon" select="$HasCoupon" />
                        <xsl:with-param name="IsCouponTypeOrders" select="$IsCouponTypeOrders" />
                        <xsl:with-param name="IsFreeShipping" select="$IsFreeShipping" />
                        <xsl:with-param name="ShowStockHints" select="$ShowStockHints" />
                        <xsl:with-param name="ShowShipDateInCart" select="$ShowShipDateInCart" />
                        <xsl:with-param name="ShowTaxBreakDown" select="$ShowTaxBreakDown" />
                        <xsl:with-param name="DecimalPlaces" select="$DecimalPlaces" />
                        <xsl:with-param name="ShowPicInCart" select="$ShowPicInCart" />
                        <xsl:with-param name="ShowLinkBack" select="$ShowLinkBack" />
                      </xsl:call-template>
                     
                  </xsl:otherwise>
                 
                </xsl:choose>
            
            </xsl:for-each>
          
        </div>
      </xsl:template>


      <xsl:template name="CartItemTemplate">
        <xsl:param name="ItemType" />
        <xsl:param name="ItemCode" />
        <xsl:param name="IsOutOfStock" />
        <xsl:param name="CartStatus" />
        <xsl:param name="AllocQty" />
        <xsl:param name="ReserveCol" />
        <xsl:param name="IsCBNItem" />
        <xsl:param name="IsDropShip" />
        <xsl:param name="ItemNotes" />
        <xsl:param name="RenderType" />
        <xsl:param name="VatEnabled" />
        <xsl:param name="VatInclusive" />
        <xsl:param name="HasCoupon" />
        <xsl:param name="IsCouponTypeOrders" />
        <xsl:param name="IsFreeShipping" />
        <xsl:param name="ShowStockHints" />
        <xsl:param name="ShowShipDateInCart" />
        <xsl:param name="ShowTaxBreakDown" />
        <xsl:param name="DecimalPlaces" />
        <xsl:param name="ShowPicInCart" />
        <xsl:param name="ShowLinkBack" />

        <div class="order-summary-item-container">
          <div class="row">
            <div class="col-lg-2 col-md-2 col-sm-12 col-xs-12">
              <!--Item Image / Item Name-->
              <xsl:choose>
                <xsl:when test="$ShowPicInCart = 'true'">
                  <div class="order-summary-item-image-container text-center">
                    <xsl:choose>
                      <xsl:when test="$ShowLinkBack = 'true'">
                        <a href="{PRODUCTLINKHREF}">
                          <img class="t" title="{PRODUCTIMAGETITLE}" alt="{PRODUCTIMAGEALT}" src="{PRODUCTIMAGEPATH}" />
                        </a>
                      </xsl:when>
                      <xsl:otherwise>
                        <img title="{PRODUCTIMAGETITLE}" alt="{PRODUCTIMAGEALT}" src="{PRODUCTIMAGEPATH}" />
                      </xsl:otherwise>
                    </xsl:choose>
                  </div>
                </xsl:when>
                <xsl:otherwise>
                  <div class="order-summary-item-name-container text-center">
                    <xsl:choose>
                      <xsl:when test="$ShowLinkBack = 'true'">
                        <a href="{PRODUCTLINKHREF}">
                          <xsl:value-of select="ITEMNAME"/>
                        </a>
                      </xsl:when>
                      <xsl:otherwise>
                        <xsl:value-of select="ITEMNAME"/>
                      </xsl:otherwise>
                    </xsl:choose>
                  </div>
                </xsl:otherwise>
              </xsl:choose>

              <!--Item Specific Type-->
              <div class="order-summary-item-specific-type-container text-center">
                <div class="label label-default">
                  <xsl:value-of select="ITEMSPECIFICTYPEDESCRIPTION" disable-output-escaping="yes" />
                </div>
              </div>

            </div>
            <div class="col-lg-6 col-md-6 col-sm-12 col-xs-12">
              <!--Item Description-->
              <div class="order-summary-item-description-container">
                <xsl:choose>
                  <xsl:when test="LINKBACK = 'true'">
                    <a href="{PRODUCTLINKHREF}">
                      <xsl:value-of select="PRODUCTLINKNAME" disable-output-escaping="yes" />
                    </a>
                  </xsl:when>
                  <xsl:otherwise>
                    <xsl:value-of select="PRODUCTLINKNAME" disable-output-escaping="yes" />
                  </xsl:otherwise>
                </xsl:choose>
              </div>
              
              <!--Sales Price-->
              <div class="order-summary-item-sales-price-container">
                <xsl:value-of select="SALES_PRICE" disable-output-escaping="yes" />
              </div>

              <!-- Unit Measure -->
              <div class="order-summary-item-unit-measure-container">
                <xsl:value-of select="UNITMEASURECODESPANDISPLAY" disable-output-escaping="yes" />
              </div>

              <!--Kit Items-->
              <xsl:if test="KIT_ITEMS">
                <div class="order-summary-item-kit-container">
                  <div class="panel">
                    <div class="panel-body">
                      <xsl:if test="LINKBACK = 'true'">
                        <a href="{KIT_ITEMS/KIT_EDIT_HREF}">
                          <xsl:value-of select="ise:StringResourceTextOnly('shoppingcart.cs.4')"/>
                        </a>
                      </xsl:if>
                      <div class="order-summary-item-kit-items-container">
                        <ul>
                          <xsl:for-each select="KIT_ITEMS/KITITEM">
                            <li>
                              <xsl:value-of select="concat('- ',current())" disable-output-escaping="yes" />
                            </li>
                          </xsl:for-each>
                        </ul>
                      </div>
                    </div>
                  </div>

                </div>
              </xsl:if>

              <!--Item Notes-->
              <xsl:if test="string-length($ItemNotes) > 0">
                <div class="order-summary-item-notes-container">
                  <xsl:value-of select="concat(ise:StringResourceTextOnly('shoppingcart.cs.23'),' ', $ItemNotes)" disable-output-escaping="yes" />
                </div>
              </xsl:if>

              <!--Gift Registry-->
              <xsl:if test="ISREGISTRYITEM = 'true'">
                <div class="order-summary-item-registry-container">
                  <div class='order-summary-item-registry-title'>
                    <xsl:value-of select="ise:StringResource('giftregistry.aspx.10')" disable-output-escaping="yes" />
                  </div>
                  <div class='order-summary-item-registry-quantity'>
                    <xsl:value-of select="concat(ise:StringResource('giftregistry.aspx.12'),': ', REGISTRYITEMQUANTITY)" />
                  </div>
                  <xsl:if test="REGISTRYITEMQUANTITY = 0">
                    <div class='order-summary-item-registry-not-available'>
                      <xsl:value-of select="ise:StringResource('editgiftregistry.error.16')" disable-output-escaping="yes" />
                    </div>
                  </xsl:if>
                  <xsl:if test="ISREGISTRYITEMHASCONFLICT = 'true'">
                    <div class='order-summary-item-registry-conflict'>
                      <xsl:value-of select="ise:StringResource('editgiftregistry.error.17')" disable-output-escaping="yes" />
                    </div>
                  </xsl:if>
                </div>
              </xsl:if>

              <!--Has Multiple Address-->
              <xsl:if test="HAS_MULTIPLE_ADDRESSES and HAS_MULTIPLE_ADDRESSES = 'true' and ITEMISDOWNLOAD and ITEMISDOWNLOAD = 'false'">
                <div class="order-summary-item-multiple-address-container">
                  <div class="order-summary-item-multiple-address-value">
                    <xsl:value-of select="concat(ise:StringResource('shoppingcart.cs.24'),': ', SHIP_ITEM_TO_VALUE)" disable-output-escaping="yes" />
                  </div>
                  <div class="order-summary-item-multiple-address-detail">
                    <xsl:value-of select="SHIP_ITEM_DETAIL" disable-output-escaping="yes" />
                  </div>
                  <div class="order-summary-item-multiple-address-shipping-method">
                    <xsl:value-of select="concat(ise:StringResource('order.cs.23'),': ', SHIPING_METHOD_VALUE)" disable-output-escaping="yes" />
                  </div>
                </div>
              </xsl:if>

              <!--Stock-->
              <div class="order-summary-item-stock-container">
                <xsl:if test="$ShowStockHints = 'true' and $ShowShipDateInCart = 'true'">
                  <xsl:choose>
                    <xsl:when test="$ItemType = 'Non-Stock' or $ItemType = 'Service' or $ItemType = 'Electronic Download' or $ItemType = 'Kit' or $ItemType = 'Gift Card' or $ItemType = 'Gift Certificate'" >
                    </xsl:when>

                    <xsl:when test="$IsOutOfStock = 'true' and $CartStatus = 'P'">
                    </xsl:when>

                    <!--Has allocation And With/Without Reservation-->
                    <xsl:when test="$AllocQty > 0 and $ReserveCol >= 0">
                      <div class="order-summary-item-stock-qty-ship">
                        <xsl:value-of select="concat(ise:FormatDecimalIfHasDecimal($AllocQty,$DecimalPlaces), ' ', ise:StringResource('shoppingcart.cs.61'))" disable-output-escaping="yes" />
                      </div>

                      <!--Reservation-->
                      <xsl:if test="$ReserveCol > 0">
                        <div class="order-summary-item-stock-reservation-container">
                          <xsl:for-each select="RESERVATIONITEM">
                            <xsl:call-template name="ReservationItemTemplate">
                              <xsl:with-param name="ItemCode" select="$ItemCode" />
                            </xsl:call-template>
                          </xsl:for-each>
                        </div>
                      </xsl:if>

                      <!--Not Available Quantity With Reservation-->
                      <xsl:if test="NOTAVAILABLEQTYWITHRESERVATION > 0">
                        <div class="order-summary-item-stock-reservation-not-available">
                          <xsl:value-of select="concat(NOTAVAILABLEQTYWITHRESERVATION, ' ', ise:StringResource('shoppingcart.cs.47'))" disable-output-escaping="yes" />
                        </div>
                      </xsl:if>

                    </xsl:when>

                    <!--0 allocation but has reservation-->
                    <xsl:when test="$AllocQty = 0 and $ReserveCol > 0">

                      <!--Reservation-->
                      <div class="order-summary-item-stock-reservation-container">
                        <xsl:for-each select="RESERVATIONITEM">
                          <xsl:call-template name="ReservationItemTemplate">
                            <xsl:with-param name="ItemCode" select="$ItemCode" />
                          </xsl:call-template>
                        </xsl:for-each>
                      </div>

                      <!--Not Available Quantity With Reservation-->
                      <xsl:if test="NOTAVAILABLEQTYWITHRESERVATION > 0">
                        <div class="order-summary-item-stock-reservation-not-available">
                          <xsl:value-of select="concat(NOTAVAILABLEQTYWITHRESERVATION, ' ', ise:StringResource('shoppingcart.cs.47'))" disable-output-escaping="yes" />
                        </div>
                      </xsl:if>

                    </xsl:when>
                    <!--0 allocation and no reservation = stock not available-->
                    <xsl:otherwise>
                      <div class="order-summary-item-stock-reservation-not-available">
                        <xsl:value-of select="ise:StringResource('shoppingcart.cs.47')" disable-output-escaping="yes" />
                      </div>
                    </xsl:otherwise>
                  </xsl:choose>
                </xsl:if>
              </div>
            </div>
            <div class="col-lg-2 col-md-2 col-sm-12 col-xs-12">
              <!-- Quantity -->
              <div class="order-summary-item-quantity-container">
                <xsl:value-of select="concat(ise:StringResource('shoppingcart.cs.25'),': ', INPUTQUANTITYVALUE)" disable-output-escaping="yes"/>
              </div>
            </div>
            <div class="col-lg-2 col-md-2 col-sm-12 col-xs-12">
              <!--Sub Total-->
              <div class="order-summary-item-sub-total-price-container">
                <xsl:choose >
                  <xsl:when test = "IS_PROMO_ITEM = 'true'">
                    <div class="order-summary-item-sub-total-price-original">
                      <strike>
                        <xsl:value-of select="ORIGINAL_PRICE" disable-output-escaping="yes" />
                      </strike>
                    </div>
                    <div class="order-summary-item-sub-total-price-ext">
                      <xsl:value-of select="SALES_EXTPRICE" disable-output-escaping="yes" />
                    </div>
                  </xsl:when>
                  <xsl:otherwise>
                    <div class="order-summary-item-sub-total-price-ext">
                      <xsl:value-of select="SALES_EXTPRICE" disable-output-escaping="yes" />
                    </div>
                  </xsl:otherwise>
                </xsl:choose>
              </div>

              <!--Coupon-->
              <xsl:if test="$HasCoupon = 'true' and $IsCouponTypeOrders = 'false'">
                <div class="order-summary-item-coupon-container">
                  <div class="order-summary-item-coupon-rate">
                    <xsl:value-of select="concat(ise:StringResource('shoppingcart.cs.42'), '(', DISCOUNT_COUPON_RATE_VALUE ,')')" disable-output-escaping="yes" />
                  </div>
                  <xsl:if test="COUPON_DISCOUNT_TYPE = 'Percent'" >
                    <div class="order-summary-item-coupon-percentage">
                      <xsl:value-of select="concat('(',DISCOUNT_COUPON_PERCENTAGE,')')" disable-output-escaping="yes" />
                    </div>
                  </xsl:if>
                  <div class="order-summary-item-coupon-price">
                    <xsl:value-of select="PRICEFORMATTED" disable-output-escaping="yes" />
                  </div>
                </div>
              </xsl:if>

              <!--Vat-->
              <xsl:if test="$VatEnabled = 'true'">
                <div class="order-summary-item-vat-container">
                  <div class="order-summary-item-vat-type">
                    <xsl:choose >
                      <xsl:when test = "$VatInclusive = 'false'">
                        <xsl:value-of select="ise:StringResource('showproduct.aspx.37')" disable-output-escaping="yes" />
                      </xsl:when>
                      <xsl:otherwise>
                        <xsl:value-of select="ise:StringResource('showproduct.aspx.38')" disable-output-escaping="yes" />
                      </xsl:otherwise>
                    </xsl:choose>
                  </div>
                  <div class="order-summary-item-vat-value">
                    <xsl:value-of select="concat(ise:StringResource('showproduct.aspx.41'), ' ', TAX_RATE_VALUE)" disable-output-escaping="yes" />
                  </div>
                </div>
              </xsl:if>
            </div>

          </div>
        </div>
        
      </xsl:template>
      
      <xsl:template name="ReservationItemTemplate">
        <xsl:param name="ItemCode" />
        <xsl:if test="RESERVE_ITEMCODE = $ItemCode">
          <div class="order-summary-item-stock-reservation-item">
            <xsl:value-of select="concat(RESERVE_QTY, ' ', ise:StringResource('shoppingcart.cs.60'), ' ', RESERVE_SHIPDATE)" disable-output-escaping="yes" />
          </div>
        </xsl:if>
      </xsl:template>


   

    </xsl:stylesheet>
  </PackageTransform>
</package>