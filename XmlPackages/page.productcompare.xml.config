<?xml version="1.0" standalone="yes"?>
<package version="2.1" displayname="Product Compare" debug="false">
  
  <!-- ###################################################################################################### -->
  <!-- Licensed by Interprise Solutions.					                          -->
  <!-- http://www.InterpriseSolutions.com														                                          -->
  <!-- For details on this license please visit  the product homepage at the URL above.		                    -->
  <!-- THE ABOVE NOTICE MUST REMAIN INTACT.                                                                   -->
  <!-- ###################################################################################################### -->
  
  <query name="Products" rowElementName="Product" debug="false" >
    <sql>
      <![CDATA[
	              SELECT * FROM EcommerceProductInfoView 
                WHERE CHARINDEX(','+CAST(ISNULL([Counter],'') AS NVARCHAR(100))+',',','+ @ItemCompareFilter +',' )>0  AND
                Languagecode = @LanguageCode AND 
                WebSiteCode = @WebSiteCode 
            ]]>
    </sql>
    
    <queryparam paramname="@WebSiteCode" paramtype="runtime" requestparamname="WebSiteCode" sqlDataType="nvarchar" defvalue="" validationpattern="" />
    <queryparam paramname="@ItemCompareFilter" paramtype="runtime" requestparamname="ItemCompareFilter" sqlDataType="nvarchar" defvalue="" validationpattern="" />
    <queryparam paramname="@LanguageCode" paramtype="runtime" requestparamname="LanguageCode" sqlDataType="varchar" defvalue="en-US" validationpattern="" />
    
  </query>

  <query name="Attributes" rowElementName="Attribute" debug="false" >
    <sql>
      <![CDATA[
	              SELECT [Counter],ItemCode,AttributeName,AttributeValue,AttributeGroupCounter,FilterGroupCounter,EntityCode,EntityType FROM InventoryItemAttributeView
                WHERE CHARINDEX(','+CAST(ISNULL([Counter],'') AS NVARCHAR(100))+',',','+ @ItemCompareFilter +',' )>0  AND
                Languagecode = @LanguageCode AND 
                WebSiteCode = @WebSiteCode 
            ]]>
    </sql>

    <queryparam paramname="@WebSiteCode" paramtype="runtime" requestparamname="WebSiteCode" sqlDataType="nvarchar" defvalue="" validationpattern="" />
    <queryparam paramname="@ItemCompareFilter" paramtype="runtime" requestparamname="ItemCompareFilter" sqlDataType="nvarchar" defvalue="" validationpattern="" />
    <queryparam paramname="@LanguageCode" paramtype="runtime" requestparamname="LanguageCode" sqlDataType="varchar" defvalue="en-US" validationpattern="" />

  </query>

  <query name="AttributeNames" rowElementName="AttributeName" debug="false" >
    <sql>
      <![CDATA[
	              SELECT AttributeName,EntityCode,EntityType FROM InventoryItemAttributeView
                WHERE CHARINDEX(','+CAST(ISNULL([Counter],'') AS NVARCHAR(100))+',',','+ @ItemCompareFilter +',' )>0  AND
                Languagecode = @LanguageCode AND 
                WebSiteCode = @WebSiteCode 
                GROUP BY AttributeName,EntityCode,EntityType
                ORDER BY AttributeName,EntityCode,EntityType 
            ]]>
    </sql>

    <queryparam paramname="@WebSiteCode" paramtype="runtime" requestparamname="WebSiteCode" sqlDataType="nvarchar" defvalue="" validationpattern="" />
    <queryparam paramname="@ItemCompareFilter" paramtype="runtime" requestparamname="ItemCompareFilter" sqlDataType="nvarchar" defvalue="" validationpattern="" />
    <queryparam paramname="@LanguageCode" paramtype="runtime" requestparamname="LanguageCode" sqlDataType="varchar" defvalue="en-US" validationpattern="" />

  </query>

  <query name="AttributeCounts" rowElementName="AttributeCount" debug="false" >
    <sql>
      <![CDATA[
	              SELECT Count(DISTINCT([Counter])) AS AttributeCount,AttributeName,AttributeValue FROM InventoryItemAttributeView
                WHERE CHARINDEX(','+CAST(ISNULL([Counter],'') AS NVARCHAR(100))+',',','+ @ItemCompareFilter +',' )>0  AND
                Languagecode = @LanguageCode AND 
                WebSiteCode = @WebSiteCode 
			          GROUP BY AttributeName,AttributeValue,EntityCode,EntityType
                ORDER BY AttributeName,AttributeValue,EntityCode,EntityType
            ]]>
    </sql>

    <queryparam paramname="@WebSiteCode" paramtype="runtime" requestparamname="WebSiteCode" sqlDataType="nvarchar" defvalue="" validationpattern="" />
    <queryparam paramname="@ItemCompareFilter" paramtype="runtime" requestparamname="ItemCompareFilter" sqlDataType="nvarchar" defvalue="" validationpattern="" />
    <queryparam paramname="@LanguageCode" paramtype="runtime" requestparamname="LanguageCode" sqlDataType="varchar" defvalue="en-US" validationpattern="" />

  </query>
  
  <PackageTransform  debug="false">
    
    <xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" xmlns:ise="urn:ise" exclude-result-prefixes="ise">
      <xsl:output method="html" omit-xml-declaration="yes" />

      <xsl:variable name="defaultWidth" select="round(80 div 5)"/>
      
      <!-- Main -->
      <xsl:template match="/">
        <br/>
        <br/>
        <div>
               <b>
                 <xsl:value-of select="ise:Topic('ComparePageText')" disable-output-escaping="yes" />
               </b>
        </div>
        <br/>
        <xsl:if test="count(/root/Products/Product) = 0 ">
          <div>
            <xsl:value-of select="ise:Topic('NoItemToCompareText')" disable-output-escaping="yes" />
          </div>
        </xsl:if>
        <xsl:if test="count(/root/Products/Product) &gt; 0 ">
              <div><xsl:call-template name="header" /></div>
          <xsl:if test="count(/root/Attributes/Attribute) &gt; 0 ">    
              <br/>
              <div align="right"> <input class ="chkCompareShowDifference" id ="chkShowCompareDifference" name="chkShowCompareDifference" onClick="showDifference(this)" type= "checkbox" align="right">Show Difference</input></div>
              <div id ="AttributeTableList"><xsl:call-template name="attribute-list" /></div>
          </xsl:if>
        </xsl:if>
          
      </xsl:template>

      <!-- Header -->
      <xsl:template name="header">
        
        <table style= "border-color: #000000; border-width: 1px; border-style: solid; border-collapse: collapse;  width:100% " class="product-compare">
        
          <!--remove-->
          <tr style= "height: 20px;">
            <th style="border-color: #000000; border-width: 1px; border-style: solid; width: 20%; text-align:left; background-color: Silver; padding: 5px;" >
              <xsl:value-of select="ise:StringResource('productcompare.aspx.2')" disable-output-escaping="yes"/>
            </th>
            <xsl:for-each select="root/Products/Product">
              <th  style="border-color: #000000; border-width: 1px; border-style: solid; width: {$defaultWidth}%; text-align:center; " >
                <a id="removelink{Counter}" href ="productcompare.aspx" onClick="removeToCompare({Counter})"  >
                  <xsl:value-of select="ise:StringResource('productcompare.aspx.1')" disable-output-escaping="yes"/>
                </a>
              </th>
            </xsl:for-each>
          </tr>
          
          <!--image-->
          <tr>
            <td style="border-color: #000000; border-width: 1px; border-style: none solid none none; width:{$defaultWidth}%; text-align:center;"></td>
            <xsl:for-each select="root/Products/Product">
              
              <xsl:variable name="imgSource" select="ise:GetProductImageSource('product', Counter, 'icon')"/>
              
              
              <td  style="border-color: #000000; border-width: 1px; border-style: none solid none none; width:{$defaultWidth}%; text-align:center;" >
                <br/>
                <span align="center" width ="25px;">
                  
                  <xsl:choose>
                    <xsl:when test="string-length(ItemDescription)>0">
                      <xsl:variable name="imghref" select="ise:ProductLink(Counter, ise:FormatStringForLink(ItemDescription), 0, ise:Encode(ItemDescription))"/>
                      <a href ="{$imghref}" >
                        <img alt="{ItemName}"  title="{ItemName}" align="center" src="{$imgSource}" style="width: 50px; height: 50px; background-color:Gray;" />
                      </a>
                    </xsl:when>
                    <xsl:otherwise>
                      <xsl:variable name="imghref" select="ise:ProductLink(Counter, ise:FormatStringForLink(ItemName), 0, ise:Encode(ItemName))"/>
                      <a href ="{$imghref}" >
                        <img alt="{ItemName}" title="{ItemName}"  align="center" src="{$imgSource}" style="width: 50px; height: 50px; background-color:Gray;" />
                      </a>      
                    </xsl:otherwise>
                  </xsl:choose>
                  
                </span>
              </td>
            </xsl:for-each>
          </tr>

          <!--item name-->
          <tr>
            <td style="border-color: #000000; border-width: 1px; border-style: none solid none none; width:{$defaultWidth}%; text-align:center;"></td>
            <xsl:for-each select="root/Products/Product">
              <td  style="border-color: #000000; border-width: 1px; border-style:  none solid none none; width:{$defaultWidth}%; text-align:center;" >
                <span align="center" border-style ="solid">
                  <xsl:choose>
                    <xsl:when test="string-length(ItemDescription)>0">
                      <xsl:value-of select="ise:ProductLink(Counter, ise:FormatStringForLink(ItemDescription), 1, ise:Encode(ItemDescription))" disable-output-escaping="yes" />
                    </xsl:when>
                    <xsl:otherwise>
                      <xsl:value-of select="ise:ProductLink(Counter, ise:FormatStringForLink(ItemName), 1, ise:Encode(ItemName))" disable-output-escaping="yes" />
                    </xsl:otherwise>
                  </xsl:choose>
                </span>
              </td>
            </xsl:for-each>
          </tr>
          
          <!--item price, cart-->
          <tr>
            <td style="border-color: #000000; border-width: 1px; border-style: none solid none none; width:{$defaultWidth}%; text-align:center;"></td>
            <xsl:for-each select="root/Products/Product">
              <td  style="border-color: #000000; border-width: 1px; border-style:  none solid none none; width:{$defaultWidth}%; text-align:center;">
                <xsl:value-of select="ise:RegisterProduct(Counter, ItemCode, ItemType)" disable-output-escaping="yes" />
                <span>
                  <xsl:value-of select="ise:DisplayPrice(Counter,ItemCode)" disable-output-escaping="yes" />
                </span>
                <span align="center">
                  <xsl:value-of select="ise:DisplayAddToCartForm(Counter, ItemCode, ItemType, 'v')" disable-output-escaping="yes" />
                  <br/>
                </span>
              </td>
            </xsl:for-each>
          </tr>      
        </table>
        
      </xsl:template>

      <!-- Attribute List-->
      <xsl:template name="attribute-list">
        <table id="attributelisttable" style="border-color: #000000; border-width: 1px; border-style: solid; border-collapse: collapse; width:100%">
        <!--header for attribute-->
          <tr style="height: 20px;" >
            <th style="border-color: #000000; border-width: 1px; border-style: none;  width: 20%; text-align:left;  background-color: Silver; padding: 5px;">Specifications</th>
            <xsl:for-each select="root/Products/Product">
              <th style="border-color: #000000; border-width: 1px; border-style: none;  width: {$defaultWidth}%; background-color: Silver;"></th>
            </xsl:for-each>
          </tr>
          <!--header for attribute-->
          
          <!--list attributes-->
          
            <xsl:for-each select="root/AttributeNames/AttributeName">
              
              <tr class ="CompareAttributeRow" >
              <td id ="CompareAttributeNameData" style="border-color: #000000; border-width: 1px; border-style: solid;  width: {$defaultWidth}%; text-align:left; padding: 5px;" >
               <b> <xsl:value-of select="AttributeName"/></b>
              </td >
                <xsl:variable name="AttributeNameFilter" select="AttributeName"/>
                <xsl:variable name="EntityCodeFilter" select="EntityCode"/>
                  <xsl:call-template name="CreateAttributeList">
                    <xsl:with-param name="attributefilter" select="$AttributeNameFilter"/>
                    <xsl:with-param name="entityCodeFilter" select="$EntityCodeFilter"/>
                    <xsl:with-param name="arrProduct" select="../../../root/Products/Product"/>
                    <xsl:with-param name="arrAttribute" select="../../../root/Attributes/Attribute"/>
                    <xsl:with-param name="arrAttributeCount" select="../../../root/AttributeCounts/AttributeCount"/>
                  </xsl:call-template>
              </tr>  
            </xsl:for-each>
          
          <!--list attributes-->
                  
        </table>
      </xsl:template>
      
      <!--CreateAttributeList-->
      <xsl:template name="CreateAttributeList">
        <xsl:param name="attributefilter"/>
        <xsl:param name="entityCodeFilter"/>
        <xsl:param name="arrProduct"/>
        <xsl:param name="arrAttribute"/>
        <xsl:param name="arrAttributeCount"/>

        <xsl:variable name="ItemCount" select="count($arrProduct)"/>
        
        <xsl:for-each select="$arrProduct">
          <xsl:variable name="ItemCodeFilter" select="ItemCode"/>
          <td id ="CompareAttributeValueData" style="border-color: #000000; border-width: 1px; border-style: solid;  width: {$defaultWidth}%; text-align:center; padding: 1px;">
            <xsl:for-each select="$arrAttribute">
              <xsl:if test="$ItemCodeFilter = ItemCode">
                <xsl:if test="$entityCodeFilter = EntityCode">
                  <xsl:if test="$attributefilter = AttributeName">
                    <!--check if unique-->
                    <xsl:variable name="AttributeValueFilter" select="AttributeValue"/>
                    <xsl:for-each select="$arrAttributeCount">
                      <xsl:if test="$attributefilter = AttributeName">
                        <xsl:if test="$AttributeValueFilter = AttributeValue">

                          <xsl:choose>
                            <xsl:when test="$ItemCount = AttributeCount">
                               <div class ="EqualAttributeValue" > <span><xsl:value-of select="$AttributeValueFilter"/></span></div>
                            </xsl:when>
                            <xsl:otherwise>
                              <div><span><xsl:value-of select="$AttributeValueFilter"/></span></div>
                            </xsl:otherwise>
                          </xsl:choose>  
                          
                        </xsl:if>
                      </xsl:if>  
                    </xsl:for-each>
                    
                  </xsl:if>
                </xsl:if>
              </xsl:if>
            </xsl:for-each>
          </td>

        </xsl:for-each>
      
      </xsl:template>
      
      </xsl:stylesheet>
  </PackageTransform>


</package>






