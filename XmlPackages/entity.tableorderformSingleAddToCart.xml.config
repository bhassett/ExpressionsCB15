<?xml version="1.0" standalone="yes"?>
<package version="2.1" displayname="Entity Table Order Form" debug="false" includeentityhelper="true">
  
  <!-- ###################################################################################################### -->
  <!-- Licensed by Interprise Solutions.					                                                            -->
  <!-- http://www.InterpriseSolutions.com														                                          -->
  <!-- For details on this license please visit  the product homepage at the URL above.		                    -->
  <!-- THE ABOVE NOTICE MUST REMAIN INTACT.                                                                   -->
  <!-- ###################################################################################################### -->

  <query name="Products" rowElementName="Product">
    <sql>
      <![CDATA[
                exec EcommerceGetProducts 
                    @CategoryCode = @CatCode,
                    @DepartmentCode = @DepCode,
                    @ManufacturerCode = @ManCode,
                    @AttributeCode = @AttCode,
                    @localeName = @locale,
                    @pagenum = @pgnum,
                    @pagesize = @pgsize,
                    @StatsFirst = 0,
                    @publishedonly = 1,
                    @sortEntityName = @entityname,
                    @WebSiteCode = @WSCode,
					@CurrentDate = @CurDate,
		            @inventoryItemType = @itemType, 
                    @ProductFilterID = @ProductFilterID,
                    @AttributeFilter=@AttributeFilter,
                    @SortingOption=@sort,
                    @ContactCode=@contactCode,
                    @CBMode=@CBMode,
                    @MinPrice=@MinPrice,
                    @MaxPrice=@MaxPrice,
                    @CurrencyCode = @CurrencyCode
            ]]>
    </sql>
    <queryparam paramname="@CatCode" paramtype="runtime" requestparamname="CatCode" sqlDataType="nvarchar" defvalue="" validationpattern="" />
    <queryparam paramname="@DepCode" paramtype="runtime" requestparamname="DepCode" sqlDataType="nvarchar" defvalue="" validationpattern="" />
    <queryparam paramname="@ManCode" paramtype="runtime" requestparamname="ManCode" sqlDataType="nvarchar" defvalue="" validationpattern="" />
    <queryparam paramname="@AttCode" paramtype="runtime" requestparamname="AttCode" sqlDataType="nvarchar" defvalue="" validationpattern="" />
    <queryparam paramname="@locale" paramtype="runtime" requestparamname="LocaleSetting" sqlDataType="varchar" defvalue="en-US" validationpattern="" />
    <queryparam paramname="@pgnum" paramtype="request" requestparamname="pagenum" sqlDataType="int" defvalue="1" validationpattern="" />
    <queryparam paramname="@entityname" paramtype="runtime" requestparamname="EntityName" sqlDataType="varchar" defvalue="" validationpattern="" />
    <queryparam paramname="@WSCode" paramtype="runtime" requestparamname="WebSiteCode" sqlDataType="varchar" defvalue="" validationpattern="" />
    <queryparam paramname="@CurDate" paramtype="runtime" requestparamname="CurrentDateTime" sqlDataType="datetime" defvalue="0" validationpattern="" />
    <queryparam paramname="@itemType" paramtype="runtime" requestparamname="ProductTypeFilterID" sqlDataType="int" defvalue="0" validationpattern="" />
    <queryparam paramname="@pgsize" paramtype="runtime" requestparamname="PageSize" sqlDataType="int" defvalue="0" validationpattern="" />
    <queryparam paramname="@ProductFilterID" paramtype="runtime" requestparamname="ProductFilterID" sqlDataType="nvarchar" defvalue="" validationpattern="" />
    <queryparam paramname="@AttributeFilter" paramtype="runtime" requestparamname="AttributeFilter" sqlDataType="nvarchar" defvalue="" validationpattern="" />
    <queryparam paramname="@sort" paramtype="request" requestparamname="sort" sqlDataType="int" defvalue="1" validationpattern="" />
    <queryparam paramname="@contactCode" paramtype="runtime" requestparamname="ContactCode" sqlDataType="varchar" defvalue="" validationpattern="" />
    <queryparam paramname="@CBMode" paramtype="runtime" requestparamname="CBNMode" sqlDataType="bit" defvalue="0" validationpattern="" />
    <queryparam paramname="@MinPrice" paramtype="request" requestparamname="pricemin" sqlDataType="decimal" defvalue="null" validationpattern="" />
    <queryparam paramname="@MaxPrice" paramtype="request" requestparamname="pricemax" sqlDataType="decimal" defvalue="null" validationpattern="" />
    <queryparam paramname="@CurrencyCode" paramtype="runtime" requestparamname="CurrencySetting" sqlDataType="nvarchar" defvalue="" validationpattern="" />
  </query>
  <XmlHelperPackage name="helper.entity.xml.config" />
  <PackageTransform>
    <xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" xmlns:ise="urn:ise" exclude-result-prefixes="ise">
      <xsl:output method="html" omit-xml-declaration="yes" />
      <xsl:param name="LocaleSetting" select="/root/Runtime/LocaleSetting" />
      <xsl:param name="WebConfigLocaleSetting" select="/root/Runtime/WebConfigLocaleSetting" />
      <xsl:param name="EntityName" select="/root/Runtime/EntityName" />
      <xsl:param name="EntityID" select="/root/Runtime/EntityID" />
      <xsl:param name="ShowSubcatsInGrid" select="ise:AppConfig('ShowSubcatsInGrid')" />
      <xsl:param name="SubcatGridCols" select="/root/EntityHelpers/*[name()=/root/Runtime/EntityName]/descendant::Entity[Name=/root/Runtime/EntityID]/ColWidth" />
      <xsl:param name="ShowSummaryInTableOrderFormat" select="ise:AppConfig('ShowSummaryInTableOrderFormat')" />
      <xsl:param name="WholesaleOnlySite" select="ise:AppConfig('WholesaleOnlySite')" />
      <xsl:param name="InitialCategory" select="/root/Runtime/InitialCategory" />
      <xsl:param name="CustomerID" select="/root/System/CustomerID" />
      <xsl:param name="SortOption" select="/root/QueryString/sort"/>
      <xsl:param name="BaseURL">
        <xsl:choose>
          <xsl:when test="ise:StrToLower(/root/Runtime/EntityName) = 'category'">c-<xsl:value-of select="/root/Runtime/EntityCode" />-<xsl:value-of select="/root/QueryString/sename" />.aspx</xsl:when>
		  <xsl:when test="ise:StrToLower(/root/Runtime/EntityName) = 'department'">d-<xsl:value-of select="/root/Runtime/EntityCode" />-<xsl:value-of select="/root/QueryString/sename" />.aspx</xsl:when>
          <xsl:when test="ise:StrToLower(/root/Runtime/EntityName) = 'manufacturer'">m-<xsl:value-of select="/root/Runtime/EntityCode" />-<xsl:value-of select="/root/QueryString/sename" />.aspx</xsl:when>
          <xsl:when test="ise:StrToLower(/root/Runtime/EntityName) = 'attribute'">a-<xsl:value-of select="/root/Runtime/EntityCode" />-<xsl:value-of select="/root/QueryString/sename" />.aspx</xsl:when>
          <xsl:when test="ise:StrToLower(/root/Runtime/EntityName) = 'library'">l-<xsl:value-of select="/root/Runtime/EntityCode" />-<xsl:value-of select="/root/QueryString/sename" />.aspx</xsl:when>
        </xsl:choose>
      </xsl:param>

      <xsl:param name="IsUserRegistered">
        <xsl:choose>
          <xsl:when test="ise:ToLower(/root/Runtime/CustomerIsRegistered) = 'true'">true</xsl:when>
          <xsl:otherwise>false</xsl:otherwise>
        </xsl:choose>
      </xsl:param>
      
      <xsl:param name="CurrentPageWithQS" select="concat(/root/System/RequestedPage, /root/System/RequestedQuerystring)" />
      <xsl:param name="VirtualPageValue" select="/root/Runtime/VirtualPageValue" />
      <xsl:variable name="VirtualPageOption" select="/root/Runtime/VirtualPageOption" />
      <xsl:variable name="smallcase" select="'abcdefghijklmnopqrstuvwxyz'" />
      <xsl:variable name="uppercase" select="'ABCDEFGHIJKLMNOPQRSTUVWXYZ'" />

      <xsl:param name="DisplayBuyButton">
        <xsl:choose>
          <xsl:when test="((ise:AppConfigBool('WholesaleOnlySite') = 'false' and $IsUserRegistered = 'false') or 
                          (ise:AppConfigBool('WholesaleOnlySite') = 'false' and $IsUserRegistered = 'true' and ise:IsCustomerRetail() = 'true') or
                          (ise:AppConfigBool('WholesaleOnlySite') = 'true' and $IsUserRegistered = 'true' and ise:IsCustomerRetail() = 'false'))">true</xsl:when>
          <xsl:otherwise>false</xsl:otherwise>
        </xsl:choose>
      </xsl:param>

      <!-- Pagination Variables -->
      <!-- CurrentPage -->
      <xsl:variable name="CurrentPage">
        <xsl:choose>
          <xsl:when test="/root/QueryString/pagenum">
            <xsl:value-of select="/root/QueryString/pagenum" />
          </xsl:when>
          <xsl:otherwise>1</xsl:otherwise>
        </xsl:choose>
      </xsl:variable>
      <xsl:template match="/">
        <script type="text/javascript" Language="JavaScript">
          
          var errorMsgNonNumeric = '<xsl:value-of select="ise:StringResourceTextOnly('common.cs.22')" disable-output-escaping="yes" />';
          var errorMsgMinQty = '<xsl:value-of select="ise:StringResourceTextOnly('showproduct.aspx.36')" disable-output-escaping="yes" />';
          
          <![CDATA[
              function TableOrderForm_Validator()
              {
                var theForm = document.TableOrderForm;
                var errorProducts = new Array();
                var errorMsg = '';
                
                for (i=0; i<theForm.elements.length; i++)
                {                      
                  if (theForm.elements[i].type == "text")
                  {                
                    var ndx = theForm.elements[i].name.search("Quantity");                        
                    if (ndx > -1)
                    {
                      if (theForm.elements[i].value.length > 0)
                      {                      
                        var prodValues = theForm.elements[i].name.split('_');
                        var prodMinQtyVar = 'MinQuantity_' + prodValues[1];   
                        var currProd = 'ProductID_' + prodValues[1];  
                        var prodName = 'ProductName_' + prodValues[1];
                        var ProdMinQty = document.getElementById(prodMinQtyVar).value; 
                        
                        if (!isInteger(theForm.elements[i].value))
                        {
                          if (errorMsg.length == 0)
                          {
                            errorMsg = errorMsgNonNumeric + ': ' + document.getElementById(prodName).value;
                          }
                          else
                          {
                            errorMsg = errorMsg + '\t' + errorMsgNonNumeric + ': ' + document.getElementById(prodName).value;
                          }                         
                        }
                        else
                        { 
                          if (parseInt(theForm.elements[i].value) > 0 && parseInt(theForm.elements[i].value) < parseInt(ProdMinQty))
                          {
                            if (errorMsg.length == 0)
                            {
                              errorMsg = errorMsgMinQty + ProdMinQty + ': ' + document.getElementById(prodName).value;
                            }
                            else
                            {
                              errorMsg = errorMsg + '\t' + errorMsgMinQty + ' ' + ProdMinQty + ': ' + document.getElementById(prodName).value;
                            }
                          }
                        }
                      }
                    }
                  }
                }
                
                if (errorMsg.length <= 0)
                {
                  theForm.submit(); 
                }
                else
                {                  
                  alert(errorMsg);
                }
              }  
              
              function isEmpty( inputStr ) { return ( null == inputStr || "" == inputStr ) }
              function isDigit (c) { return ((c >= "0") && (c <= "9")) }
                
              function isInteger(s)
              {                
                 var i;
                                  
                 if (isEmpty(s))
                 {  
                    if (isInteger.arguments.length == 1) 
                    {
                      return 0;
                    }
                    else
                    {
                      return (isInteger.arguments[1] == true);
                    }
                 }
                                  
                 for (i = 0; i < s.length; i++)
                 {
                    var c = s.charAt(i);
                    if (!isDigit(c)) return false;
                 }
                 return true;
               }

               

               function SubmitSearchResultPagination(theForm, currPageNum, noOfPages)
               {                 
                 if (currPageNum > 0 && currPageNum <= noOfPages)
                 {
                   document.getElementById('txtSearchFilterPage').value = currPageNum;
                   theForm.submit();
                 }
                 else
                 {                    
                   return false;
                 }
               }
            ]]>
        </script>

        <div class="grid">
        <xsl:choose>
          <xsl:when test="count(/root/Products/Product) &gt; 0">
            <xsl:call-template name="PaginationBarTop" />
          </xsl:when>
        </xsl:choose>

        
          <xsl:if test="$VirtualPageOption = 0">
            <div>
               <xsl:value-of select="ise:EntityPageHeaderDescription($EntityName, $EntityID)" disable-output-escaping="yes" />
            </div>
          </xsl:if>

          <xsl:choose>
            <xsl:when test="$VirtualPageOption = 1">
                  <xsl:value-of select="ise:Topic($VirtualPageValue)" disable-output-escaping="yes" />
            </xsl:when>
            <xsl:when test="$VirtualPageOption = 2">
                  <xsl:value-of select="ise:DisplayExternalPage($VirtualPageValue)" disable-output-escaping="yes" />
            </xsl:when>
            <xsl:when test="count(/root/Products/Product) = 0 and count(/root/EntityHelpers/*[name()=/root/Runtime/EntityName]/descendant::Entity[EntityID=/root/Runtime/EntityID]/Entity) = 0">
              <xsl:value-of select="ise:Topic(concat('empty', /root/Runtime/EntityName, 'text'))" disable-output-escaping="yes" />
            </xsl:when>
            <xsl:otherwise>
              <form method="POST" name="TableOrderForm" id="TableOrderForm" action="tableorder_process.aspx?returnurl={$CurrentPageWithQS}">
                <table border="0" cellpadding="6" cellspacing="0" width="100%" class="productGridTable">
                  <xsl:apply-templates select="/root/Products/Product" />
                </table>
              </form>
            </xsl:otherwise>
          </xsl:choose>
        

        <xsl:choose>
          <xsl:when test="count(/root/Products/Product) &gt; 0">
            <xsl:call-template name="PaginationBarBottom" />
          </xsl:when>
        </xsl:choose>

        </div>
      </xsl:template>

      <xsl:template name="PaginationBarTop">
          <xsl:if test="$DisplayBuyButton = 'true'">
            <input class="btn btn-success content" type="button" name="btnAddToCart" id="btnAddToCart" onClick="TableOrderForm_Validator();"
                   data-contentKey="AppConfig.CartButtonPrompt"
                   data-contentValue="{ise:StringResourceTextOnly('AppConfig.CartButtonPrompt')}"
                   data-contentType="string resource"
                   value="{ise:StringResourceTextOnly('AppConfig.CartButtonPrompt')}" />
            <br />
            <br />
          </xsl:if>
          <div class="header">
            <xsl:value-of select="ise:EntityPagingControl($BaseURL, $CurrentPage, /root/Products2/Product/pages, $SortOption)" disable-output-escaping="yes" />
            <xsl:value-of select="ise:EntitySortingControl(ise:StringResource('sort.aspx.0'))" disable-output-escaping="yes" />
          </div>
      </xsl:template>
      <xsl:template name="PaginationBarBottom">
        <div class="footer">
          <xsl:value-of select="ise:EntityPagingControl($BaseURL, $CurrentPage, /root/Products2/Product/pages, $SortOption)" disable-output-escaping="yes" />
        </div>
        <xsl:if test="$DisplayBuyButton = 'true'">
          <br />
          <input class="btn btn-success content" type="button" name="btnAddToCart" id="btnAddToCart" onClick="TableOrderForm_Validator();"
                 data-contentKey="AppConfig.CartButtonPrompt"
                 data-contentValue="{ise:StringResourceTextOnly('AppConfig.CartButtonPrompt')}"
                 data-contentType="string resource"
                 value="{ise:StringResourceTextOnly('AppConfig.CartButtonPrompt')}" />
        </xsl:if>
      </xsl:template>

      <xsl:template match="Product">
        <xsl:variable name="delta">
          <xsl:choose>
            <xsl:when test="(count(/root/Products/Product) mod number($SubcatGridCols)) = 0">
              0
            </xsl:when>
            <xsl:otherwise>
              <xsl:value-of select="number($SubcatGridCols)-(count(/root/Products/Product) mod number($SubcatGridCols))" />
            </xsl:otherwise>
          </xsl:choose>
        </xsl:variable>
        <xsl:variable name="rows" select="ceiling(count(/root/Products/Product) div number($SubcatGridCols))" />

        <xsl:if test="$SubcatGridCols = 1">
          <tr>
            <xsl:call-template name="ProductCell" />
          </tr>
        </xsl:if>

        <xsl:if test="position() mod $SubcatGridCols = 1 and $SubcatGridCols &gt; 1">
          <tr>
            <xsl:for-each select=". | following-sibling::*[position() &lt; $SubcatGridCols]">
              <xsl:call-template name="ProductCell" />
            </xsl:for-each>

            <xsl:if test="ceiling(position() div  number($SubcatGridCols)) = $rows and $delta &gt; 0">
              <xsl:call-template name="FillerCells">
                <xsl:with-param name="cellCount" select="$delta" />
              </xsl:call-template>
            </xsl:if>
          </tr>
        </xsl:if>
      </xsl:template>

      <xsl:template name="ProductCell">
        <xsl:param name="pSummary" select="ise:GetMLValue(Summary)" />
        <xsl:param name="pSalesPromptName" select="ise:GetMLValue(SalesPromptName)" />
        <xsl:param name="pShowBuyButton">
          <xsl:value-of select="ShowBuyButton" />
        </xsl:param>
        <xsl:param name="pRequiresRegistration">
          <xsl:value-of select="RequiresRegistration" />
        </xsl:param>

        <xsl:param name="pDescription">
          <xsl:choose>
            <xsl:when test="string-length(WebDescription)>0">
              <xsl:value-of select="WebDescription" />
            </xsl:when>
            <xsl:otherwise>
              <xsl:value-of select="ItemDescription" />
            </xsl:otherwise>
          </xsl:choose>
        </xsl:param>
        
        <xsl:param name="URL">
          <xsl:value-of select="ise:ProductandEntityLink(Counter, SEName, $EntityID, $EntityName, 0)" disable-output-escaping="yes" />
        </xsl:param>
        <xsl:param name="pName" select="ise:GetMLValue(ItemName)" />
        <xsl:param name="pID" select="ise:GetMLValue(Counter)" />
        <xsl:param name="pDesc" select="ise:GetMLValue(ItemDescription)" />            
        <!-- Min Qty -->
        <xsl:param name="pMinQty">
          <xsl:choose>
            <xsl:when test="/root/Products/Product/MinOrderQuantity &gt; 0">
              <xsl:value-of select="/root/Products/Product/MinOrderQuantity" />
            </xsl:when>
            <xsl:otherwise>
              <xsl:value-of select="1" />
            </xsl:otherwise>
          </xsl:choose>
        </xsl:param>       
        
        <td align="center" valign="top" width="{concat(round(100 div number($SubcatGridCols)),'%')}">
          <table width="100%" cellpadding="0" cellspacing="0">
            <tr>
              <td height="30" align="center" valign="center">
                <a href="{$URL}">
                  <xsl:value-of select="ise:DisplayImage('product', Counter, 'icon', SEAltText, 'AltText', 'center', ItemCode, boolean('true'))" disable-output-escaping="yes" />
                </a>
              </td>
            </tr>
            <tr>
              <td align="center" valign="top">
                <p class="prodName">
                  <xsl:value-of select="$pName" disable-output-escaping="yes" />
                </p>

                <div align="center">
                  <xsl:choose>
                    <xsl:when test="$ShowSummaryInTableOrderFormat='true'">
                      <xsl:value-of select="$pSummary" disable-output-escaping="yes" />
                    </xsl:when>
                    <xsl:otherwise>
                      <xsl:value-of select="$pDescription" disable-output-escaping="yes" />
                    </xsl:otherwise>
                  </xsl:choose>
                  <xsl:value-of select="ise:ProductDescriptionFile(Counter, 1)" disable-output-escaping="yes" />
                </div>
                
                <!-- Anon Customer are not Allowed to See Price or Add Items to Cart-->
                <xsl:if test="/root/Runtime/CustomerIsRegistered = 'true'">
                  <xsl:if test="number(CustomerEntersPrice)=0">
                    <p class="prodPrice">
                      <span>
                        <xsl:attribute name="id">
                          VariantPrice_<xsl:value-of select="VariantID" />
                        </xsl:attribute>
                        <xsl:value-of select="ise:GetVariantPrice(VariantID, number(HidePriceUntilCart), Price, SalePrice, ExtendedPrice, Points, $pSalesPromptName, TaxClassID, 1)" disable-output-escaping="yes" />
                        <xsl:value-of select="ise:DisplayPrice(Counter, ItemCode)" disable-output-escaping="yes" />
                      </span>
                    </p>
                  </xsl:if>
                </xsl:if>

              

                  <xsl:value-of select="ise:RegisterProduct(Counter, ItemCode, ItemType, false())" disable-output-escaping="yes" />

                  <!-- DisplayPrice() method is overloaded, to make a different javascript call   -->
                  <!-- from a item product to other type (e.g. 'Kit')                             -->
                  <!-- see implementation of the said code at ISECommon\XSLTExtensionBase.cs file -->
                  <xsl:choose>
                    <xsl:when test="ise:ToLower(ItemType)='kit'">
                      <xsl:value-of select="ise:DisplayPrice(Counter, ItemCode, HidePriceUntilCart, ItemType)" disable-output-escaping="yes" />
                    </xsl:when>
                    <xsl:otherwise>
                      <xsl:value-of select="ise:DisplayPrice(Counter, ItemCode)" disable-output-escaping="yes" />
                    </xsl:otherwise>
                  </xsl:choose>

                  <xsl:value-of select="ise:EntityLoyaltyPoints(Counter, ItemCode, ItemType)" disable-output-escaping="yes" />
                
                  <xsl:if test="(ItemType != 'Kit' and ItemType != 'Matrix Group' and ItemType != 'Matrix Item' and $pShowBuyButton = 'True') and ($pRequiresRegistration = 'False' or ($pRequiresRegistration = 'True' and $IsUserRegistered = 'true'))">
                    <xsl:value-of select="ise:DisplayQuantity(Counter, true, ItemType, ItemCode)" disable-output-escaping="yes" />
                  </xsl:if>

                
                
                <input name="ProductID_{$pID}" id="ProductID_{$pID}" value="{$pID}" type="hidden" />
                <input name="ProductName_{$pID}" id="ProductName_{$pID}" value="{$pName}" type="hidden" />
                <input name="MinQuantity_{$pID}" id="MinQuantity_{$pID}" value="{$pMinQty}" type="hidden" />
              </td>
            </tr>
          </table>

        </td>
      </xsl:template>

      <xsl:template name="FillerCells">
        <xsl:param name="cellCount" />
        <xsl:param name="CellWidth" select="100 div $SubcatGridCols" />
        <td width="{$CellWidth}%">&#0160;</td>
        <xsl:if test="$cellCount &gt; 1">
          <xsl:call-template name="FillerCells">
            <xsl:with-param name="cellCount" select="$cellCount - 1" />
          </xsl:call-template>
        </xsl:if>
      </xsl:template>

    </xsl:stylesheet>
  </PackageTransform>
</package>




