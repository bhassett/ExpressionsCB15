<?xml version="1.0" encoding="utf-8"?>
<package displayname="Distributor Notification Email" version="2.1" debug="false">
  
  <!-- ###################################################################################################### -->
  <!-- Licensed by Interprise Solutions.					                          -->
  <!-- http://www.InterpriseSolutions.com														                                          -->
  <!-- For details on this license please visit  the product homepage at the URL above.		                    -->
  <!-- THE ABOVE NOTICE MUST REMAIN INTACT.                                                                   -->
  <!-- ###################################################################################################### -->
  
  <query name="Order" rowElementName="OrderInfo">
    <sql>
      <![CDATA[
            select o.* ,
                a.AddressIDs,
                case when a.Downloads = a.ItemCount then 1 else 0 end allDownloads,
                case when a.FreeShipping = a.ItemCount then 1 else 0 end allFreeShipping,
                case when a.SystemProducts = a.ItemCount then 1 else 0 end allSystemproducts
            From orders o with (NOLOCK) 
                join (select ordernumber , count(distinct sc.ShippingAddressID) AddressIDs, sum(sc.IsDownload) Downloads, sum(sc.FreeShipping) FreeShipping, sum(sc.isSystem) SystemProducts, count(*) ItemCount From Orders_ShoppingCart sc with (NOLOCK)  where ordernumber = @ordernum group by ordernumber ) a on o.ordernumber = a.ordernumber
            where o.ordernumber = @ordernum
            ]]>
    </sql>
    <queryparam paramname="@ordernum" paramtype="request" requestparamname="ordernumber" defvalue="0" sqlDataType="int" validationpattern="^\d{1,9}$" />
    <queryparam paramname="@distributorid" paramtype="runtime" requestparamname="DistributorID" defvalue="0" sqlDataType="int" validationpattern="^\d{1,9}$" />
  </query>
  <query name="OrderItems" rowElementName="lineitem">
    <sql>
      <![CDATA[
            select od.*, p.ManufacturerPartNumber 
            From dbo.Orders_ShoppingCart od with (NOLOCK) 
                join dbo.product p with (NOLOCK) on od.productid = p.productid 
                join dbo.ProductDistributor pd with (NOLOCK) on p.productid = pd.productid and pd.DistributorID = @distributorid
            where ordernumber = @ordernum
            ]]>
    </sql>
    <queryparam paramname="@distributorid" paramtype="runtime" requestparamname="DistributorID" defvalue="0" sqlDataType="int" validationpattern="^\d{1,9}$" />
    <queryparam paramname="@ordernum" paramtype="runtime" requestparamname="ordernumber" defvalue="0" sqlDataType="int" validationpattern="^\d{1,9}$" />
  </query>
  <PackageTransform>
    <xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" xmlns:ise="urn:ise" exclude-result-prefixes="ise">
      <xsl:output method="html" omit-xml-declaration="yes" />
      <xsl:param name="LocaleSetting" select="/root/Runtime/LocaleSetting" />
      <xsl:param name="WebConfigLocaleSetting" select="/root/Runtime/WebConfigLocaleSetting" />
      <xsl:param name="ordernumber" select="/root/Runtime/ordernumber" />
      <xsl:template match="/">
        <html>
          <head>
            <title>
              <xsl:value-of select="ise:AppConfig('StoreName')" disable-output-escaping="yes" /> - DISTRIBUTOR NOTIFICATION ORDER NUMBER <xsl:value-of select="$ordernumber" />
            </title>
          </head>
          <body>
            <b>
              <xsl:value-of select="ise:AppConfig('StoreName')" disable-output-escaping="yes" /> - DISTRIBUTOR NOTIFICATION
            </b>
            <br />
            <br />
            <xsl:apply-templates select="/root/Order/OrderInfo" />
            <p>
              <b>Packing List</b>
            </p>
            <table border="1" cellspacing="0" cellpadding="4">
              <tr>
                <td valign="top" align="left">
                  <b>Item</b>
                </td>
                <td valign="top" align="left">
                  <b>Mfg #</b>
                </td>
                <td valign="top" align="center">
                  <b>Qty</b>
                </td>
              </tr>
              <xsl:apply-templates select="/root/OrderItems/lineitem" />
            </table>
            <p align="left">
              <b>
                <xsl:value-of select="ise:AppConfig('StoreName')" disable-output-escaping="yes" />
                <br />
              </b>
              <xsl:value-of select="/root/System/StoreUrl" />
            </p>
          </body>
        </html>
      </xsl:template>
      <xsl:template match="OrderInfo">
        Order Number:  <xsl:value-of select="$ordernumber" />
        <br />
        Order Date: <xsl:value-of select="OrderDate" />
        <br />
        Customer ID: <xsl:value-of select="CustomerID" />
        <br />
        Affiliate ID: <xsl:value-of select="AffiliateID" />
        <br />
        <xsl:if test="LevelID!='' and number(LevelID)!=0">
          <xsl:value-of select="ise:StringResource('order.cs.11', $LocaleSetting)" disable-output-escaping="yes" />
          <xsl:value-of select="LevelName" />:
          <xsl:value-of select="ise:StringResource('order.cs.4', $LocaleSetting)" disable-output-escaping="yes" /> =
          <xsl:value-of select="LevelDiscountPercent" />%,
          <xsl:value-of select="ise:StringResource('order.cs.5', $LocaleSetting)" disable-output-escaping="yes" /> =
          <xsl:value-of select="ise:FormatCurrency(LevelDiscountAmount)" />,
          <xsl:value-of select="ise:StringResource('order.cs.6', $LocaleSetting)" disable-output-escaping="yes" /> =
          <xsl:value-of select="ise:EvalBool(LevelHasFreeShipping)" />,
          <xsl:value-of select="ise:StringResource('order.cs.7', $LocaleSetting)" disable-output-escaping="yes" /> =
          <xsl:value-of select="ise:EvalBool(LevelAllowsQuantityDiscounts)" />,
          <xsl:value-of select="ise:StringResource('order.cs.8', $LocaleSetting)" disable-output-escaping="yes" /> =
          <xsl:value-of select="ise:EvalBool(LevelHasNoTax)" />,
          <xsl:value-of select="ise:StringResource('order.cs.9', $LocaleSetting)" disable-output-escaping="yes" /> =
          <xsl:value-of select="ise:EvalBool(LevelAllowsCoupons)" />,
          <xsl:value-of select="ise:StringResource('order.cs.10', $LocaleSetting)" disable-output-escaping="yes" /> =
          <xsl:value-of select="ise:EvalBool(LevelDiscountsApplyToExtendedPrices)" />
        </xsl:if>
        <br />
        <br />
        <table>
          <tr>
            <td>
              <p>
                <b>Shipping</b>
              </p>
              <xsl:value-of select="concat(ShippingFirstName, '', ShippingLastName)" />
              <br />
              <xsl:value-of select="ShippingAddress1" />
              <br />
              <xsl:if test="ShippingAddress2!=''">
                <xsl:value-of select="ShippingAddress2" />
                <br />
              </xsl:if>
              <xsl:if test="ShippingSuite!=''">
                <xsl:value-of select="ShippingSuite" />
                <br />
              </xsl:if>
              <xsl:value-of select="ShippingCity" />, <xsl:value-of select="ShippingState" />
              <xsl:value-of select="ShippingZip" />
              <br />
              <xsl:value-of select="ShippingCountry" />
              <br />
              <xsl:value-of select="ShippingPhone" />
              <br />
              Shipping Method: <xsl:value-of select="ShippingMethod" />
              <br />
            </td>
            <td width="20">&#0160;</td>
            <td>
              <p>
                <b>Billing</b>
              </p>
              <xsl:value-of select="concat(BillingFirstName, '', BillingLastName)" />
              <br />
              <xsl:value-of select="BillingAddress1" />
              <br />
              <xsl:if test="BillingAddress2!=''">
                <xsl:value-of select="BillingAddress2" />
                <br />
              </xsl:if>
              <xsl:if test="BillingSuite!=''">
                <xsl:value-of select="BillingSuite" />
                <br />
              </xsl:if>
              <xsl:value-of select="BillingCity" />, <xsl:value-of select="BillingState" />
              <xsl:value-of select="BillingZip" />
              <br />
              <xsl:value-of select="BillingCountry" />
              <br />
              <xsl:value-of select="BillingPhone" />
              <br />
              E-Mail: <xsl:value-of select="Email" />
              <br />
            </td>
          </tr>
        </table>
        <br />
        <p>
          Notes From Customer: <xsl:value-of select="OrderNotes" />
        </p>
        <br />
        <p>
          Notes From Customer Service: <xsl:value-of select="CustomerServiceNotes" />
        </p>
        <br />
        <br />
      </xsl:template>
      <xsl:template match="lineitem">
        <tr>
          <td valign="top" align="left">
            <xsl:value-of select="OrderedProductName" />
          </td>
          <td valign="top" align="left">
            <xsl:value-of select="ManufacturerPartNumber" /> 
          </td>
          <td valign="top" align="center">
            <xsl:value-of select="Quantity" />
          </td>
        </tr>
      </xsl:template>
    </xsl:stylesheet>
  </PackageTransform>
</package>
