<?xml version="1.0" encoding="utf-8"?>
<package displayname="Wishlists" version="2.1" allowengine="true" includeentityhelper="true" debug="false">
  
  <!-- ###################################################################################################### -->
  <!-- Licensed by Interprise Solutions.					                          -->
  <!-- http://www.InterpriseSolutions.com														                                          -->
  <!-- For details on this license please visit  the product homepage at the URL above.		                    -->
  <!-- THE ABOVE NOTICE MUST REMAIN INTACT.                                                                   -->
  <!-- ###################################################################################################### -->
  
 
	<PackageTransform>
    <xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" xmlns:ise="urn:ise" exclude-result-prefixes="ise">
      <xsl:output method="html" omit-xml-declaration="yes" />
      
      <xsl:variable name="IsCartEmpty" select="FIELD/IsCartEmpty" />
      <xsl:variable name="CartType" select="FIELD/CartType" />
      <xsl:variable name="ShowPicsInCart" select="FIELD/ShowPicsInCart" />
      <xsl:variable name="LinkToProductPageInCart" select="FIELD/LinkToProductPageInCart" />
      <xsl:variable name="HideUnitMeasure" select="FIELD/HideUnitMeasure" />
      <xsl:variable name="ShowCartDeleteItemButton" select="FIELD/ShowCartDeleteItemButton" />
      <xsl:variable name="IsInEditingMode" select="FIELD/IsInEditingMode" />
      <xsl:variable name="DeleteLabel" select="FIELD/DeleteLabel" />
       

      <xsl:template match="/">
        <xsl:choose>
          <xsl:when test="$IsCartEmpty = 'true'">
            <xsl:call-template name="EmptyCart"></xsl:call-template>
          </xsl:when>
          <xsl:otherwise>
            <xsl:call-template name="CartItems"></xsl:call-template>
          </xsl:otherwise>
        </xsl:choose>
      </xsl:template>

      <xsl:template name="EmptyCart">
        <xsl:value-of select="FIELD/EmptyCartContent" disable-output-escaping="yes"></xsl:value-of>
      </xsl:template>
      
      <xsl:template name="CartItems">

      
        <table width="100%" cellpadding="2" cellspacing="0" border="0" class="table table-bordered table-hover">
          <thead>
            <!--Image/Name Link Col-->
            <xsl:choose>
              <xsl:when test="$ShowPicsInCart = 'true'">
                <th align="center" valign="middle">
                  <strong>
                      <xsl:value-of select="ise:StringResource('shoppingcart.cs.1')" ></xsl:value-of>
                  </strong>
                </th>
                </xsl:when>
              <xsl:otherwise>
                <th align="left" valign="middle">
                  <strong>
                    <xsl:value-of select="ise:StringResource('shoppingcart.cs.1')" ></xsl:value-of>
                  </strong>
                </th>
              </xsl:otherwise>
            </xsl:choose>
            
            <th align="center" valign="middle">&#160;</th>
            
            <!--Unit Measure Col-->
            <xsl:if test="$HideUnitMeasure = 'false'">
              <th align="center" valign="middle">
                <strong>
                  <xsl:value-of select="ise:StringResource('shoppingcart.cs.37')" ></xsl:value-of>
                </strong>
              </th>
            </xsl:if>
            
            <!--Quantity Col-->
            <th align="center" valign="middle">
              <strong>
                <xsl:value-of select="ise:StringResource('shoppingcart.cs.2')" ></xsl:value-of>
              </strong>
            </th>

            <!--Subtotal Col-->
            <td align="right" valign="middle"></td>
          
          </thead>
          <tbody>
            <xsl:for-each select="FIELD/GroupedItems/GroupedItem">
              <xsl:if test="current()/BundleCode = ''">
                <xsl:call-template name="NonBunleGroupItem">
                  <xsl:with-param name="Items" select="current()/Items" />
                </xsl:call-template>
              </xsl:if>
            </xsl:for-each>
            </tbody>
        
      
       </table>
      </xsl:template>
      
      <xsl:template name="NonBunleGroupItem">
        <xsl:param name="Items" />
        
        <xsl:for-each select="$Items/Item">
          <tr>
            <xsl:call-template name="HeaderDivider"></xsl:call-template>
          </tr>
          
          <tr>
            
            <!--Image-->
            <td align="center" valign="top">
              <xsl:call-template name="ProductImage"></xsl:call-template>
            </td>

            <!--Name (Some Details), Multi-Shipping-->
            <td>
              <xsl:call-template name="ProductName"></xsl:call-template>
              <xsl:if test="current()/ShipToTitle != ''">
                  <xsl:call-template name="ProductMultiShipping"></xsl:call-template>
              </xsl:if>
            </td>

            <!--Unit Measure-->
            <xsl:if test="$HideUnitMeasure = 'false'">
              <td align="center" valign="top">
                <xsl:choose>
                  <xsl:when test="count(current()/UnitMeasures/UnitMeasure) &gt; 1">
                    
                    <select name="UnitMeasureCode_{current()/ShoppingCartRecordID}" id="UnitMeasureCode_{current()/ShoppingCartRecordID}" size="1" class="form-control">
                      <xsl:for-each select="current()/UnitMeasures/UnitMeasure">
                        <xsl:choose>
                          <xsl:when test ="current()/IsSelected = 'true'">
                            <option value="{current()/Code}" selected="selected">
                              <xsl:value-of select="current()/Description"></xsl:value-of>
                            </option>
                          </xsl:when>
                          <xsl:otherwise>
                             <option value="{current()/Code}">
                              <xsl:value-of select="current()/Description"></xsl:value-of>
                            </option>
                          </xsl:otherwise>
                        </xsl:choose>  
                      
                      </xsl:for-each>
                    </select>
                    
                  </xsl:when>
                  <xsl:otherwise>
                    <input type="hidden" id="UnitMeasureCode_{current()/ShoppingCartRecordID}" name="UnitMeasureCode_{current()/ShoppingCartRecordID}" value="{current()/UnitMeasureCode}" />
                    <span>
                      <xsl:value-of select="current()/AvailableUnitMeasureCode"></xsl:value-of>
                    </span>
                    </xsl:otherwise>
                </xsl:choose>
              </td>
            </xsl:if>
            
            <!--Quantity, Delete-->
            <td align="center" valign="top">
              <xsl:choose>
                <xsl:when test="count(current()/RestrictedQuantities/RestrictedQuantity) &gt; 0">
                  <select name="Quantity_{current()/ShoppingCartRecordID}" class="form-control" id="Quantity_{current()/ShoppingCartRecordID}" size="1" class="form-control">
                    
                    <xsl:if test="$ShowCartDeleteItemButton = 'true'">
                      <option value="0">DELETE</option>
                    </xsl:if>
                    
                    <xsl:for-each select="current()/RestrictedQuantities/RestrictedQuantity">
                      <xsl:choose>
                        <xsl:when test="current()/IsSelected = 'true'">
                          <option value="{current()/Quantity}" selected="selected">
                            <xsl:value-of select="current()/Quantity"></xsl:value-of>
                          </option>
                        </xsl:when>
                        <xsl:otherwise>
                          <option value="{current()/Quantity}">
                            <xsl:value-of select="current()/Quantity"></xsl:value-of>
                          </option>
                        </xsl:otherwise>
                      </xsl:choose>
                    </xsl:for-each>
                  
                    </select>
                </xsl:when>
                <xsl:otherwise>
                  <input type="text" name="Quantity_{current()/ShoppingCartRecordID}" id="Quantity_{current()/ShoppingCartRecordID}" size="4" value="{current()/QuantityLocaleParsed}" maxlength="14"/>
                  
                  <xsl:if test="$ShowCartDeleteItemButton = 'true'">
                    <xsl:choose>
                      <xsl:when test="$IsInEditingMode = 'true'">
                        <span class='content' data-contentKey='shoppingcart.cs.31' data-contentValue="{$DeleteLabel}" data-contentType='string resource'>
                          <xsl:value-of select='$DeleteLabel'></xsl:value-of>
                        </span>
                      </xsl:when>
                      <xsl:otherwise>
                        <input type="submit" name="bt_Delete" class="btn btn-default" value="{$DeleteLabel}" onclick="this.form.Quantity_{current()/ShoppingCartRecordID}.value='0';"/>
                        </xsl:otherwise>
                    </xsl:choose>
                    </xsl:if>
                  </xsl:otherwise>
              </xsl:choose>
              <input type="hidden" name="MinOrderQuantity_{current()/ShoppingCartRecordID}" id="MinOrderQuantity_{current()/ShoppingCartRecordID}" value="{current()/MinimumQuantity}" />
            </td>
             
            <!--Move to Shopping Cart-->
            <xsl:if test="current()/IsItemHasVisibleBuyButton = 'true'">
              <td align="right" valign="top">
                <xsl:choose>
                  <xsl:when test="$IsInEditingMode = 'true'">
                    
                    <span class='content' data-contentKey='shoppingcart.cs.3' data-contentValue="{ise:StringResource('shoppingcart.cs.3')}" data-contentType='string resource'>
                      <xsl:value-of select="ise:StringResource('shoppingcart.cs.3')" ></xsl:value-of>
                    </span>
                    
                    <span class='content' data-contentKey='AppConfig.CartPrompt' data-contentValue="{ise:StringResource('AppConfig.CartPrompt')}" data-contentType='string resource'>
                      <xsl:value-of select="ise:StringResource('AppConfig.CartPrompt')" ></xsl:value-of>
                    </span>
                  
                  </xsl:when>
                  <xsl:otherwise>
                    
                   <input type="button" 
                          class="move-to-shopping-cart btn btn-default content" 
                          value='{current()/MoveToShoppingCartValue}' 
                          data-elementId='Quantity_{current()/ShoppingCartRecordID}' 
                          data-cartId='{current()/ShoppingCartRecordID}' 
                          data-messageQuantityInvalid='{current()/MoveToShoppingCartInvalidQuantityMessage}' 
                          data-messageQuantityEmpty="{ise:StringResource('common.cs.24')}" 
                          data-quantityRegEx='{current()/QuantityRegularExpression}' />
             
                  </xsl:otherwise>
                </xsl:choose>
              </td>
            </xsl:if>
          
          </tr>
        </xsl:for-each>
      
      </xsl:template>
      
      <xsl:template name="BunleGroupItem">
        
      
      </xsl:template>

      
        
      
        
      
      <xsl:template name="HeaderDivider">
        <td id='tdWishListHeaderDivider'>
          <xsl:attribute name="colspan">
            <xsl:choose>
              <xsl:when test="$ShowPicsInCart = 'true'">5</xsl:when>
              <xsl:otherwise>4</xsl:otherwise>
            </xsl:choose>
          </xsl:attribute>
        </td>
      </xsl:template>
      
      <xsl:template name="ProductImage">
        
        <xsl:choose>
          <xsl:when test="$ShowPicsInCart = 'true'">
            <xsl:if test="$LinkToProductPageInCart = 'true'">
              <a href="{current()/Link}">
                <xsl:if test="current()/ImageSource != ''">
                  <img src="{current()/ImageSource}" border="0"></img>
                </xsl:if>
              </a>
            </xsl:if>
          </xsl:when>
          <xsl:otherwise></xsl:otherwise>
        </xsl:choose>
      </xsl:template>
      
      <xsl:template name="ProductName">
        
            <xsl:choose>
                <xsl:when test="current()/Matrix">
                  <xsl:choose>
                    <xsl:when test="$LinkToProductPageInCart = 'true'">
                      <a href="{current()/Matrix/Link}">
                        <strong>
                          <xsl:value-of select="current()/DisplayName"></xsl:value-of>
                        </strong>
                      </a>
                      <br />
                    </xsl:when>
                    <xsl:otherwise>
                      <strong>
                        <xsl:value-of select="current()/DisplayName"></xsl:value-of>
                      </strong>    
                      <br />
                    </xsl:otherwise>
                  </xsl:choose>
                  
                  <xsl:for-each select="current()/Matrix/Attribute">
                    <xsl:value-of select="concat(current()/AttributeCode , ': ', current()/AttributeValueDescription)"></xsl:value-of>
                    <br />
                  </xsl:for-each>
                </xsl:when>
                <xsl:when test="current()/Kit">
                  <div style="margin-left: 10px;">
                    <xsl:choose>
                      <xsl:when test="$LinkToProductPageInCart= 'true'">
                         <a href="{current()/Link}">
                           <strong>
                             <xsl:value-of select="current()/DisplayNameEncoded"></xsl:value-of>
                           </strong>
                        </a>
                        <br/>
                      </xsl:when>
                      <xsl:otherwise>
                        <strong>
                             <xsl:value-of select="current()/DisplayName"></xsl:value-of>
                        </strong>
                        <br/>
                      </xsl:otherwise>
                    </xsl:choose>

                    <xsl:for-each select="current()/Kit/Item">
                      <xsl:value-of select="concat('-(',current()/Quantity,')' , ' ', current()/ItemNameEncoded)"></xsl:value-of>
                      <br />
                    </xsl:for-each>
                    
                    <br/>
                  </div>
                </xsl:when>
                <xsl:otherwise>
                  <xsl:choose>
                    <xsl:when test="$LinkToProductPageInCart= 'true'">
                       <a href="{current()/Link}">
                         <strong>
                           <xsl:value-of select="current()/DisplayNameEncoded"></xsl:value-of>
                         </strong>
                      </a>
                      <br/>
                    </xsl:when>
                    <xsl:otherwise>
                      <strong>
                           <xsl:value-of select="current()/DisplayName"></xsl:value-of>
                      </strong>
                      <br/>
                    </xsl:otherwise>
                  </xsl:choose>
              
                 </xsl:otherwise>
              </xsl:choose>
      </xsl:template>
      
      <xsl:template name="ProductMultiShipping">
         
         <xsl:if test="current()/ShipToTitle != ''">
                
                <xsl:value-of select="concat(current()/ShipToLabel, ' ', current()/ShipToTitle )"></xsl:value-of>
                <div style="margin-left: 10px;">
                  <xsl:value-of select="current()/Address" disable-output-escaping="yes"></xsl:value-of>
                </div>
                
                <xsl:if test="current()/ShippingMethod != ''">
                  <div>
                    <xsl:value-of select="current()/ShippingMethodLabel" disable-output-escaping="yes"></xsl:value-of>
                    <xsl:value-of select="current()/ShippingMethod" disable-output-escaping="yes"></xsl:value-of>
                  </div>
                </xsl:if>
              
              </xsl:if>
      </xsl:template>
        
     
    </xsl:stylesheet>
  </PackageTransform>
</package>



