<?xml version="1.0" standalone="yes"?>
<!-- ###################################################################################################### -->
<!-- Licensed by Interprise Solutions.					                -->
<!-- http://www.InterpriseSolutions.com														                -->
<!-- For details on this license please visit  the product homepage at the URL above.		                -->
<!-- THE ABOVE NOTICE MUST REMAIN INTACT.                                                                   -->
<!-- ###################################################################################################### -->
<package version="2.1" displayname="Departments" debug="false" includeentityhelper="true">
  <PackageTransform>
    <xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" xmlns:ise="urn:ise" exclude-result-prefixes="ise">
      <xsl:output method="html" omit-xml-declaration="yes" />

      <xsl:param name="DepartmentID">
        <xsl:choose>
          <xsl:when test="/root/System/PageName = 'showcategory.aspx' or /root/System/PageName = 'showmanufacturer.aspx'">0</xsl:when>
          <xsl:when test="/root/System/PageName = 'showsection.aspx' and boolean(/root/QueryString/departmentid)">
            <xsl:value-of select="/root/QueryString/departmentid" />
          </xsl:when>
          <xsl:when test="(/root/System/PageName = 'showsection.aspx' or /root/System/PageName = 'showproduct.aspx') and boolean(/root/Cookies/lastviewedentityinstanceid) and /root/Cookies/lastviewedentityname = 'Department'">
            <xsl:value-of select="/root/Cookies/lastviewedentityinstanceid" />
          </xsl:when>
          <xsl:otherwise>0</xsl:otherwise>
        </xsl:choose>
      </xsl:param>

      <xsl:template match="/">
        <ul class="tame" >
          <xsl:apply-templates select="/root/EntityHelpers/Department/Entity">
            <xsl:with-param name="prefix" select="''" />
          </xsl:apply-templates>
        </ul>
      </xsl:template>

      <xsl:template match="Entity">
        <xsl:param name="prefix"></xsl:param>
        <xsl:param name="eName" select="ise:GetMLValue(Description)" />

        <li class="tame_plus">
          <div>
            <!--<xsl:value-of select="$prefix" />-->
            <xsl:attribute name="class">
              <xsl:choose>
                <xsl:when test="count(child::Entity) &gt; 0">
                  <xsl:choose>
                    <xsl:when test="EntityID = $DepartmentID or descendant::Entity/EntityID = $DepartmentID">
                      <![CDATA[collapsable]]>
                    </xsl:when>
                    <xsl:otherwise>
                      <![CDATA[expandable]]>
                    </xsl:otherwise>
                  </xsl:choose>
                </xsl:when>
                <xsl:otherwise >
                  <![CDATA[expandable tame_noimage]]>
                </xsl:otherwise>
              </xsl:choose>
            </xsl:attribute>
          </div>

          <a class="leftmenu" href="{concat('d-',EntityID,'-',ise:FormatStringForLink(SEName),'.aspx')}">
            <xsl:if test="EntityID = $DepartmentID or descendant::Entity/EntityID = $DepartmentID">
              <xsl:attribute name="style">font-weight:bold</xsl:attribute>
            </xsl:if>
            <xsl:value-of select="$eName" />
          </a>

          <xsl:if test="count(child::Entity)&gt;0 and (EntityID = $DepartmentID or descendant::Entity/EntityID = $DepartmentID)">
            <ul class="tame" >
              <xsl:apply-templates select="Entity">
                <xsl:with-param name="prefix" select="concat($prefix, '&#160;&#0160;')" />
              </xsl:apply-templates>
            </ul>
          </xsl:if>

        </li>
      </xsl:template>

    </xsl:stylesheet>
  </PackageTransform>
</package>