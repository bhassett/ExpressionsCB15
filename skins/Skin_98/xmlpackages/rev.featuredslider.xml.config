<?xml version="1.0" encoding="utf-8"?>
<package displayname="Featured Items" version="2.1" allowengine="true" includeentityhelper="true" debug="false">

  <!-- ###################################################################################################### -->
  <!-- Licensed by Interprise Solutions.					                          -->
  <!-- http://www.InterpriseSolutions.com														                                          -->
  <!-- For details on this license please visit  the product homepage at the URL above.		                    -->
  <!-- THE ABOVE NOTICE MUST REMAIN INTACT.                                                                   -->
  <!-- ###################################################################################################### -->

  <XmlHelperPackage name="helper.product.xml.config" />
  
  <PackageTransform debug="false">
    <xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" xmlns:ise="urn:ise" exclude-result-prefixes="ise">
      <xsl:output method="html" omit-xml-declaration="yes" />

      <xsl:param name="DisplayColumns" select="FIELD/DISPLAY_COLUMN" />
      <xsl:param name="Rows" select="ceiling(count(FIELD/ITEMS/ITEM) div number($DisplayColumns))" />
      <xsl:param name="CellWidth" select="100 div $DisplayColumns" />
      <xsl:param name="EmptyCells">
        <xsl:choose>
          <xsl:when test="(count(FIELD/ITEMS/ITEM) mod number($DisplayColumns)) = 0">0</xsl:when>
          <xsl:otherwise>
            <xsl:value-of select="number($DisplayColumns)-(count(FIELD/ITEMS/ITEM) mod number($DisplayColumns))" />
          </xsl:otherwise>
        </xsl:choose>
      </xsl:param>
      <xsl:param name="DisplayLayout" select="FIELD/DISPLAY_LAYOUT"></xsl:param>
      <xsl:param name="DisplayRating" select="FIELD/DISPLAY_RATING"></xsl:param>
      <xsl:param name="DisplayPics" select="FIELD/DISPLAY_PICS"></xsl:param>
      <xsl:param name="DisplayShowMore" select="FIELD/DISPLAY_SHOWMORE"></xsl:param>
      <xsl:param name="AddToCartAction" select="FIELD/ADDTOCART_ACTION"></xsl:param>
      <xsl:param name="HasAddToCart" select="count(FIELD/ITEMS/ITEM[DISPLAY_ADDTOCART = 'true']) > 0"></xsl:param>
      <xsl:param name="ControlID" select="concat('FeaturedItems_', FIELD/GUID)"></xsl:param>
      <xsl:param name="SliderOptions" select="FIELD/SLIDER_OPTIONS"></xsl:param>
      
      <xsl:template match="/">

        <script type="text/javascript" src="jscripts/product_ajax.js"></script>
        <script type="text/javascript" src="jscripts/kitproduct_ajax.js"></script>
        <script type="text/javascript" src="jscripts/formatting/accounting.min.js"></script>

        <div id="featuredItems">
          <h4>
            <xsl:value-of select="ise:StringResource('featureditems.aspx.1')" disable-output-escaping="yes" />
          </h4>
          <ul class="featured-items" id="{$ControlID}">
            <xsl:apply-templates select="FIELD/ITEMS/ITEM" />
          </ul>
          
          <xsl:if test="$DisplayShowMore = 'true'">
            <a href="featureditems.aspx">
              <xsl:value-of select="ise:StringResource('common.cs.17')" disable-output-escaping="yes"  />
            </a>    
          </xsl:if>
        </div>
        <script src="jscripts/jquery/jquery.bxslider.min.js"></script>
        <script>
          $(document).ready(function(){
            $('.add-to-cart').on('click', function (e) {
              var addtocart = '<xsl:value-of select="$AddToCartAction" />';
          var url = 'shoppingcart.aspx';
          var itemcounter = $(this).data('itemcounter');
          var params = { counter: itemcounter, quantity: 1, kitcomposition: '', unitmeasure: '' }

          $.ajax({ type: "POST",
          url: "ActionService.asmx/AddToCartEx",
          data: JSON.stringify(params),
          dataType: "json",
          async: false,
          contentType: "application/json; charset=utf-8",
          success: function (message) { result = message.d; },
          error: function (message, textStatus, exception) { return ""; }
          });

          if (addtocart == "STAY") { alert("item has been added"); window.location = window.location; }
          else { window.location = url; }
          });

          var controlId = '#<xsl:value-of select="$ControlID"></xsl:value-of>';
          var sliderOpts = { <xsl:value-of select="$SliderOptions"></xsl:value-of> };
          $(controlId).bxSlider({ minSlides: 2,
          maxSlides: 3,
          slideWidth: 300,
          slideMargin: 2});

          });
        </script>
      </xsl:template>

      <!-- ROWS -->
      <xsl:template match="ITEM">
        <xsl:call-template name="SLIDE"></xsl:call-template>
      </xsl:template>

      <!-- GRID COLUMN -->
      <xsl:template name="SLIDE">
        <li>
          <div class="grid">

            <!-- pics -->
            <xsl:if test="$DisplayPics = 'true'">
              <a href="{ITEM_URL}" data-itempopup="{ITEM_CODE}">
                <div class="pix">
                  <img src="{IMAGE_URL}" alt="{IMAGE_ALT}" title="{IMAGE_TITLE}"></img>
                </div>
              </a>
            </xsl:if>

            <!-- title -->
            <div class="title">
              <a href="{ITEM_URL}" data-itempopup="{ITEM_CODE}">
                <xsl:value-of select="ITEM_TITLE" disable-output-escaping="yes" />
              </a>
            </div>

            <!-- cart -->
            <table class="cart">
              <tr>
                <td class="pricing">
                  <xsl:if test="$DisplayRating = 'true'">
                    <span class="rating">
                      <xsl:value-of select="ise:ProductAverageRatingControl(ITEM_CODE)" disable-output-escaping="yes" />
                    </span>
                  </xsl:if>
                  
                  <xsl:if test="DISPLAY_PRICE = 'true'">
                    <xsl:choose>
                      <xsl:when test="ITEM_TYPE = 'Electronic Download'">
                        <xsl:choose>
                          <xsl:when test="HAS_NO_AVAILABLE_DOWNLOAD_FILE = 'true' or IS_DOWNLOAD_FILE_NOT_EXISTS = 'true'">
                          </xsl:when>
                          <xsl:otherwise>
                            <xsl:if test="ITEM_HAS_PROMO_PRICE = 'true'">
                              <span class="promo-price">
                                <xsl:value-of select="ITEM_PROMO_PRICE_FORMATTED" disable-output-escaping="yes" />
                              </span>
                            </xsl:if>
                            <span>
                              <xsl:attribute name="class">
                                <xsl:choose>
                                  <xsl:when test="ITEM_HAS_PROMO_PRICE = 'true'">price-with-promo</xsl:when>
                                  <xsl:otherwise>price</xsl:otherwise>
                                </xsl:choose>

                              </xsl:attribute>
                              <xsl:value-of select="ITEM_PRICE_FORMATTED" disable-output-escaping="yes" />
                            </span>
                          </xsl:otherwise>
                        </xsl:choose>
                      </xsl:when>
                      <xsl:otherwise>
                        <xsl:if test="ITEM_HAS_PROMO_PRICE = 'true'">
                          <span class="promo-price">
                            <xsl:value-of select="ITEM_PROMO_PRICE_FORMATTED" disable-output-escaping="yes" />
                          </span>
                        </xsl:if>
                        <span>
                          <xsl:attribute name="class">
                            <xsl:choose>
                              <xsl:when test="ITEM_HAS_PROMO_PRICE = 'true'">price-with-promo</xsl:when>
                              <xsl:otherwise>price</xsl:otherwise>
                            </xsl:choose>

                          </xsl:attribute>
                          <xsl:value-of select="ITEM_PRICE_FORMATTED" disable-output-escaping="yes" />
                        </span>
                      </xsl:otherwise>
                    </xsl:choose>
                  </xsl:if>

                  
                </td>
              </tr>
              <tr>
                <td class="addtocart">
                  <xsl:if test="DISPLAY_ADDTOCART = 'true'">
                    <xsl:choose>
                      <xsl:when test="ITEM_TYPE = 'Electronic Download'">
                        <xsl:choose>
                          <xsl:when test="HAS_NO_AVAILABLE_DOWNLOAD_FILE = 'true' or IS_DOWNLOAD_FILE_NOT_EXISTS = 'true'">
                            <span>
                              <xsl:value-of select="ise:StringResource('shoppingcart.cs.39')"  disable-output-escaping="yes"/>
                            </span>
                          </xsl:when>
                          <xsl:otherwise>
                            <input type="submit" class="add-to-cart site-button btn btn-info" value="Add to Cart" data-itemcounter="{ITEM_COUNTER}"></input>
                          </xsl:otherwise>
                        </xsl:choose>
                      </xsl:when>
                      <xsl:otherwise>
                        <input type="submit" class="add-to-cart site-button btn btn-info" value="Add to Cart" data-itemcounter="{ITEM_COUNTER}"></input>
                      </xsl:otherwise>
                    </xsl:choose>
                  </xsl:if>
                </td>
              </tr>
              <tr>
                <td colspan="2">
                  <!-- loyalty points -->
                  <xsl:value-of select="ise:RegisterProduct(ITEM_COUNTER, ITEM_CODE, ITEM_TYPE)" disable-output-escaping="yes" />
                  <xsl:value-of select="ise:ProductLoyaltyPoints(ITEM_COUNTER, ITEM_CODE, ITEM_TYPE)" disable-output-escaping="yes" />
                </td>
              </tr>
            </table>
          </div>
        </li>
      </xsl:template>

    </xsl:stylesheet>
  </PackageTransform>
</package>