<?xml version="1.0" standalone="yes"?>
<package version="2.1" displayname="Advanced Search Form" includeentityhelper="true" debug="false">

  <!-- ###################################################################################################### -->
  <!-- Licensed by Interprise Solutions.					                -->
  <!-- http://www.InterpriseSolutions.com														                -->
  <!-- For details on this license please visit  the product homepage at the URL above.		                -->
  <!-- THE ABOVE NOTICE MUST REMAIN INTACT.                                                                   -->
  <!-- ###################################################################################################### -->

  <query name="ItemTypes" rowElementName="ItemType">
    <sql>
      <![CDATA[ 
            SELECT DISTINCT ItemType FROM InventoryItem with (NOLOCK) WHERE ItemType NOT IN ('Matrix Item')
        ]]>
    </sql>
  </query>
  <query name="UnitMeasures" rowElementName="UnitMeasure">
    <sql>
      <![CDATA[ 
            SELECT Counter as UnitMeasureID, UnitMeasureCode, UnitMeasureDescription FROM SystemUnitMeasure with (NOLOCK) WHERE IsActive = 1
        ]]>
    </sql>
  </query>
  <query name="Products" rowElementName="Product" runif="SearchTerm">
    <sql>
      <![CDATA[ 
            exec eCommerceSearchInventory @SearchTerm, @WebSiteCode, @LanguageCode, NULL, @ItemType, @UnitMeasure, @CategoryID, @SectionID, @ManufacturerID, @AttributeID, @SearchDescriptions, @CurrentDate, @ProductFilterID, @ContactCode, @CBMode, @PageNum, @CurrencyCode, @MinPrice, @MaxPrice
          ]]>
    </sql>
    <queryparam paramname="@SearchTerm" paramtype="request" requestparamname="SearchTerm" sqlDataType="varchar" defvalue="" validationpattern="" />
    <queryparam paramname="@WebSiteCode" paramtype="runtime" requestparamname="WebSiteCode" sqlDataType="varchar" defvalue="" validationpattern="" />
    <queryparam paramname="@LanguageCode" paramtype="runtime" requestparamname="LanguageCode" sqlDataType="varchar" defvalue="" validationpattern="" />
    <queryparam paramname="@ItemType" paramtype="request" requestparamname="ItemType" sqlDataType="varchar" defvalue="" validationpattern="" />
    <queryparam paramname="@UnitMeasure" paramtype="request" requestparamname="UnitMeasure" sqlDataType="varchar" defvalue="" validationpattern="" />
    <queryparam paramname="@CategoryID" paramtype="request" requestparamname="CategoryID" sqlDataType="varchar" defvalue="" validationpattern="" />
    <queryparam paramname="@SectionID" paramtype="request" requestparamname="SectionID" sqlDataType="varchar" defvalue="" validationpattern="" />
    <queryparam paramname="@ManufacturerID" paramtype="request" requestparamname="ManufacturerID" sqlDataType="varchar" defvalue="" validationpattern="" />
    <queryparam paramname="@AttributeID" paramtype="request" requestparamname="AttributeID" sqlDataType="varchar" defvalue="" validationpattern="" />
    <queryparam paramname="@SearchDescriptions" paramtype="request" requestparamname="SearchDescriptions" sqlDataType="varchar" defvalue="" validationpattern="" />
    <queryparam paramname="@CurrentDate" paramtype="runtime" requestparamname="Date" sqlDataType="datetime" defvalue="0" validationpattern="" />
    <queryparam paramname="@ProductFilterID" paramtype="runtime" requestparamname="ProductFilterID" sqlDataType="nvarchar" defvalue="" validationpattern="" />
    <queryparam paramname="@ContactCode" paramtype="runtime" requestparamname="ContactCode" sqlDataType="nvarchar" defvalue="" validationpattern="" />
    <queryparam paramname="@CBMode" paramtype="runtime" requestparamname="CBNMode" sqlDataType="bit" defvalue="0" validationpattern="" />
    <queryparam paramname="@PageNum" paramtype="request" requestparamname="ppagenum" sqlDataType="int" defvalue="1" validationpattern="" />
    <queryparam paramname="@CurrencyCode" paramtype="runtime" requestparamname="CurrencySetting" sqlDataType="nvarchar" defvalue="" validationpattern="" />
    <queryparam paramname="@MinPrice" paramtype="request" requestparamname="MinPrice" sqlDataType="decimal" defvalue="null" validationpattern="" />
    <queryparam paramname="@MaxPrice" paramtype="request" requestparamname="MaxPrice" sqlDataType="decimal" defvalue="null" validationpattern="" />
  </query>
  <query name="Categories" rowElementName="Category" runif="SearchTerm">
    <sql>
      <![CDATA[
                exec eCommerceSearchCategories @SearchTerm, @WebSiteCode, @LanguageCode, @CategoryID, @PageNum
      ]]>
    </sql>
    <queryparam paramname="@SearchTerm" paramtype="request" requestparamname="SearchTerm" sqlDataType="varchar" defvalue="" validationpattern="" />
    <queryparam paramname="@WebSiteCode" paramtype="runtime" requestparamname="WebSiteCode" sqlDataType="varchar" defvalue="" validationpattern="" />
    <queryparam paramname="@LanguageCode" paramtype="runtime" requestparamname="LanguageCode" sqlDataType="varchar" defvalue="" validationpattern="" />
    <queryparam paramname="@CategoryID" paramtype="request" requestparamname="CategoryID" sqlDataType="int" defvalue="0" validationpattern="" />
    <queryparam paramname="@PageNum" paramtype="request" requestparamname="cpagenum" sqlDataType="int" defvalue="1" validationpattern="" />
  </query>
  <query name="Departments" rowElementName="Department" runif="SearchTerm">
    <sql>
      <![CDATA[
            exec eCommerceSearchDepartments @SearchTerm, @WebSiteCode, @LanguageCode, @SectionID, @PageNum
            ]]>
    </sql>
    <queryparam paramname="@SearchTerm" paramtype="request" requestparamname="SearchTerm" sqlDataType="varchar" defvalue="" validationpattern="" />
    <queryparam paramname="@WebSiteCode" paramtype="runtime" requestparamname="WebSiteCode" sqlDataType="varchar" defvalue="" validationpattern="" />
    <queryparam paramname="@LanguageCode" paramtype="runtime" requestparamname="LanguageCode" sqlDataType="varchar" defvalue="" validationpattern="" />
    <queryparam paramname="@SectionID" paramtype="request" requestparamname="SectionID" sqlDataType="int" defvalue="0" validationpattern="" />
    <queryparam paramname="@PageNum" paramtype="request" requestparamname="dpagenum" sqlDataType="int" defvalue="1" validationpattern="" />
  </query>
  <query name="Manufacturers" rowElementName="Manufacturer" runif="SearchTerm">
    <sql>
      <![CDATA[
            exec eCommerceSearchManufacturers @SearchTerm, @WebSiteCode, @LanguageCode, @ManufacturerID, @PageNum
            ]]>
    </sql>
    <queryparam paramname="@SearchTerm" paramtype="request" requestparamname="SearchTerm" sqlDataType="varchar" defvalue="" validationpattern="" />
    <queryparam paramname="@WebSiteCode" paramtype="runtime" requestparamname="WebSiteCode" sqlDataType="varchar" defvalue="" validationpattern="" />
    <queryparam paramname="@LanguageCode" paramtype="runtime" requestparamname="LanguageCode" sqlDataType="varchar" defvalue="" validationpattern="" />
    <queryparam paramname="@ManufacturerID" paramtype="request" requestparamname="ManufacturerID" sqlDataType="int" defvalue="0" validationpattern="" />
    <queryparam paramname="@PageNum" paramtype="request" requestparamname="mpagenum" sqlDataType="int" defvalue="1" validationpattern="" />
  </query>
    <query name="Attributes" rowElementName="Attribute" runif="SearchTerm">
        <sql>
            <![CDATA[
            exec eCommerceSearchAttributes @SearchTerm, @LanguageCode, @WebSiteCode, @AttributeID, @PageNum
            ]]>
        </sql>
        <queryparam paramname="@SearchTerm" paramtype="request" requestparamname="SearchTerm" sqlDataType="varchar" defvalue="" validationpattern="" />        
        <queryparam paramname="@LanguageCode" paramtype="runtime" requestparamname="LanguageCode" sqlDataType="varchar" defvalue="" validationpattern="" />
        <queryparam paramname="@WebSiteCode" paramtype="runtime" requestparamname="WebSiteCode" sqlDataType="varchar" defvalue="" validationpattern="" />
        <queryparam paramname="@AttributeID" paramtype="request" requestparamname="AttributeID" sqlDataType="int" defvalue="0" validationpattern="" />
        <queryparam paramname="@PageNum" paramtype="request" requestparamname="apagenum" sqlDataType="int" defvalue="1" validationpattern="" />
    </query>
  <XmlHelperPackage name="helper.entity.xml.config" />
  <PackageTransform debug="false">
    <xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" xmlns:ise="urn:ise" exclude-result-prefixes="ise">
      <xsl:output method="html" omit-xml-declaration="yes" />
      <xsl:param name="LocaleSetting" select="/root/Runtime/LocaleSetting" />
      <xsl:param name="WebConfigLocaleSetting" select="/root/Runtime/WebConfigLocaleSetting" />

        <xsl:param name="pSearchTerm">
            <xsl:choose>
                <xsl:when test="/root/QueryString/searchterm">
                    <xsl:value-of select="/root/QueryString/searchterm" />
                </xsl:when>
                <xsl:otherwise>
                    <xsl:value-of select="/root/QueryString/searchterm" />
                </xsl:otherwise>
            </xsl:choose>
        </xsl:param>

        <xsl:param name="pQueryStringRAW">
          <xsl:value-of select="/root/System/QueryStringRAW" />
        </xsl:param>


      <xsl:param name="CurrentPage">
        <xsl:choose>
          <xsl:when test="/root/QueryString/entitytype">
            <xsl:choose>
              <xsl:when test="/root/QueryString/entitytype = 'p'"><xsl:value-of select="/root/QueryString/ppagenum" /></xsl:when>
              <xsl:when test="/root/QueryString/entitytype = 'c'"><xsl:value-of select="/root/QueryString/cpagenum" /></xsl:when>
              <xsl:when test="/root/QueryString/entitytype = 'd'"><xsl:value-of select="/root/QueryString/dpagenum" /></xsl:when>
              <xsl:when test="/root/QueryString/entitytype = 'm'"><xsl:value-of select="/root/QueryString/mpagenum" /></xsl:when>
              <xsl:when test="/root/QueryString/entitytype = 'a'"><xsl:value-of select="/root/QueryString/apagenum" /></xsl:when>
              <xsl:otherwise>1</xsl:otherwise>
            </xsl:choose>
          </xsl:when>
          <xsl:otherwise>1</xsl:otherwise>
        </xsl:choose>
      </xsl:param>

        <xsl:param name="BaseURL">
            searchadv.aspx?<xsl:value-of select="$pQueryStringRAW"  disable-output-escaping="yes" />
        </xsl:param>
      <xsl:param name="SearchGridColWidth">4</xsl:param>
      <xsl:variable name="smallcase" select="'abcdefghijklmnopqrstuvwxyz'" />
      <xsl:variable name="uppercase" select="'ABCDEFGHIJKLMNOPQRSTUVWXYZ'" />
        
      <xsl:template match="/">
        <xsl:value-of select="ise:Topic('SearchPageHeader')" disable-output-escaping="yes" />
        
        <form method="GET" action="searchadv.aspx" name="AdvSearchForm" id="AdvSearchForm">
          <div id="searchAdvance">

            <!-- search term -->
            <div class="medium-block">
              <span class="caption">
                <xsl:value-of select="ise:StringResource('searchadv.aspx.17')" disable-output-escaping="yes"></xsl:value-of>
              </span>
              <input type="text" id="txtSearchTermAdvanced" name="SearchTerm" maxlength="70" value="{/root/QueryString/searchterm}" />
              <xsl:value-of select="ise:GetSearchFormValidatorScript('AdvSearchForm', 'txtSearchTermAdvanced')" disable-output-escaping="yes" />
            </div>

            <!-- item types -->
            <xsl:if test="ise:AppConfigBool('SearchAdv_ShowProductType')='true'">
              <div class="small-block">
                <span class="caption">
                  <xsl:value-of select="ise:StringResource('searchadv.aspx.18')" disable-output-escaping="yes"></xsl:value-of>
                </span>
                <select name="ItemType">
                  <option value="ANY">
                    <xsl:value-of select="ise:StringResource('searchadv.aspx.28')" disable-output-escaping="yes" />
                  </option>
                  <xsl:apply-templates select="/root/ItemTypes/ItemType" />
                </select>
              </div>
            </xsl:if>

            <!-- price range -->
            <xsl:if test="ise:AppConfig('SearchAdv_ShowPriceRange')='true'">
              <div class="small-block">
                <span class="caption">
                  <xsl:value-of select="ise:StringResource('searchadv.aspx.19')" disable-output-escaping="yes"></xsl:value-of>
                </span>
                <input type="text" maxLength="10" name="MinPrice" placeholder="{ise:StringResource('searchadv.aspx.26')}" value="{/root/QueryString/minprice}" class="pricerange" />
                <input type="hidden" name="MinPrice_vldt">
                  <xsl:attribute name="value">
                    [number][invalidalert=<xsl:value-of select="ise:StringResourceTextOnly('searchadv.aspx.12')" disable-output-escaping="yes" />]
                  </xsl:attribute>
                </input>
                <xsl:value-of select="ise:StringResource('searchadv.aspx.29')" disable-output-escaping="yes"></xsl:value-of>
                <input type="text" maxLength="10" name="MaxPrice"  placeholder="{ise:StringResource('searchadv.aspx.27')}" value="{/root/QueryString/maxprice}" class="pricerange" />
                <input type="hidden" name="MaxPrice_vldt">
                  <xsl:attribute name="value">
                    [number][invalidalert=<xsl:value-of select="ise:StringResourceTextOnly('searchadv.aspx.12')" disable-output-escaping="yes" />]
                  </xsl:attribute>
                </input>
              </div>
            </xsl:if>

            <!-- unit measures -->
            <xsl:if test="ise:AppConfigBool('SearchAdv_ShowUnitMeasure')='true'">
              <div class="small-block">
                <span class="caption">
                  <xsl:value-of select="ise:StringResource('searchadv.aspx.20')" disable-output-escaping="yes"></xsl:value-of>
                </span>
                <select name="UnitMeasure">
                  <option value="ANY">
                    <xsl:value-of select="ise:StringResource('searchadv.aspx.28')" disable-output-escaping="yes" />
                  </option>
                  <xsl:apply-templates select="/root/UnitMeasures/UnitMeasure" />
                </select>
              </div>
            </xsl:if>

            <!-- category -->
            <xsl:if test="ise:AppConfigBool('SearchAdv_ShowCategory')='true'">
              <div class="small-block">
                <span class="caption">
                  <xsl:value-of select="ise:StringResource('searchadv.aspx.21')" disable-output-escaping="yes"></xsl:value-of>
                </span>
                <select onChange="document.AdvSearchForm.submit()" name="CategoryID">
                  <option value="0">
                    <xsl:value-of select="ise:StringResourceTextOnly('searchadv.aspx.9')" disable-output-escaping="yes" />
                  </option>
                  <xsl:for-each select="/root/EntityHelpers/Category/Entity">
                    <xsl:call-template name="EntityOption">
                      <xsl:with-param name="selected" select="/root/QueryString/categoryid" />
                    </xsl:call-template>
                  </xsl:for-each>
                </select>
              </div>
            </xsl:if>

            <!-- department -->
            <xsl:if test="ise:AppConfigBool('SearchAdv_ShowDepartment')='true'">
              <div class="small-block">
                <span class="caption">
                  <xsl:value-of select="ise:StringResource('searchadv.aspx.22')" disable-output-escaping="yes"></xsl:value-of>
                </span>
                <select onChange="document.AdvSearchForm.submit()" name="SectionID">
                  <option value="0">
                    <xsl:value-of select="ise:StringResourceTextOnly('searchadv.aspx.9')" disable-output-escaping="yes" />
                  </option>
                  <xsl:for-each select="/root/EntityHelpers/Department/Entity">
                    <xsl:call-template name="EntityOption">
                      <xsl:with-param name="selected" select="/root/QueryString/sectionid" />
                    </xsl:call-template>
                  </xsl:for-each>
                </select>
              </div>
            </xsl:if>

            <!-- manufacturer -->
            <xsl:if test="ise:AppConfigBool('SearchAdv_ShowManufacturer')='true'">
              <div class="small-block">
                <span class="caption">
                  <xsl:value-of select="ise:StringResource('searchadv.aspx.23')" disable-output-escaping="yes"></xsl:value-of>
                </span>
                <select onChange="document.AdvSearchForm.submit()" name="ManufacturerID">
                  <option value="0">
                    <xsl:value-of select="ise:StringResourceTextOnly('searchadv.aspx.9')" disable-output-escaping="yes" />
                  </option>
                  <xsl:for-each select="/root/EntityHelpers/Manufacturer/Entity">
                    <xsl:call-template name="EntityOption">
                      <xsl:with-param name="selected" select="/root/QueryString/manufacturerid" />
                    </xsl:call-template>
                  </xsl:for-each>
                </select>
              </div>
            </xsl:if>

            <!-- attribute -->
            <xsl:if test="ise:AppConfigBool('SearchAdv_ShowAttribute')='true'">
              <div class="small-block">
                <span class="caption">
                  <xsl:value-of select="ise:StringResource('searchadv.aspx.24')" disable-output-escaping="yes"></xsl:value-of>
                </span>
                <select onChange="document.AdvSearchForm.submit()" name="AttributeID">
                  <option value="0">
                    <xsl:value-of select="ise:StringResourceTextOnly('searchadv.aspx.9')" disable-output-escaping="yes" />
                  </option>
                  <xsl:for-each select="/root/EntityHelpers/Attribute/Entity">
                    <xsl:call-template name="EntityOption">
                      <xsl:with-param name="selected" select="/root/QueryString/attributeid" />
                    </xsl:call-template>
                  </xsl:for-each>
                </select>
              </div>
            </xsl:if>
          </div>
          <input type="submit" value="{ise:StringResourceTextOnly('search.aspx.1')}" name="SubmitSearch" id="SubmitSearch"
                 class="site-button content right"
                 data-contentKey="search.aspx.1"
                 data-contentValue="{ise:StringResourceTextOnly('search.aspx.1')}"
                 data-contentType="string resource" />
          <script>
            function SearchForm2_Validator(theForm)
            {
              var minSearchKey = <xsl:value-of select="ise:AppConfig('MinSearchStringLength')" disable-output-escaping="yes" />;
              var errMessage = '<xsl:value-of select="ise:StrFormatStringresourceTextOnly('search.aspx.2', ise:AppConfig('MinSearchStringLength'), ',')" disable-output-escaping="yes" />';

              $disableSubmit(theForm);

              if (theForm.SearchTerm.value.length &lt; minSearchKey) {
                alert(errMessage);
                theForm.SearchTerm.focus();
                $enableSubmit(theForm);
                return (false);
              }
              return (true);
            }
          </script>
        </form>

      <xsl:choose>
        <xsl:when test="ise:AppConfigBool('Search_ShowCategoriesInResults')='true' and count(/root/Categories/Category)>0">
          <br />
           <table width="100%" cellpadding="2" cellspacing="0" style="border-style: solid; border-width: 0px; border-color: #444444" class="search-grid-wrapper">
            <tr>
              <td align="left" valign="top">
                <img border="0" src="{concat('skins/Skin_', ise:SkinID(), '/images/matchingcategories.gif')}" />
                <br />
                  <table width="100%" cellpadding="4" cellspacing="0" border="0" style="{ise:AppConfig('BoxFrameStyle')}">
                  <tr>
                    <td align="left" valign="top">
                        <table border="0" cellpadding="0" cellspacing="4" width="100%" class="search-grid-body">
                            <xsl:apply-templates select="/root/Categories/Category" />
                        </table>
                    </td>
                  </tr>
                  </table>
                  <div class="Paging" style="float: left; padding: 3px 0px 10px 0px;">
                      <xsl:value-of select="ise:EntityPagingControl(concat($BaseURL, '&amp;EntityType=c'), $CurrentPage, /root/Categories2/Category/pages, '0')" disable-output-escaping="yes" />
                  </div>
              </td>
            </tr>
          </table>
        </xsl:when>
    </xsl:choose>

    <xsl:choose>
        <xsl:when test="ise:AppConfigBool('Search_ShowDepartmentsInResults')='true' and count(/root/Departments/Department)>0">
          <br />
          <table width="100%" cellpadding="2" cellspacing="0" style="border-style: solid; border-width: 0px; border-color: #444444" class="search-grid-wrapper">
            <tr>
              <td align="left" valign="top">
                <img border="0" src="{concat('skins/Skin_', ise:SkinID(), '/images/matchingsections.gif')}" />
                <br />
                <table width="100%" cellpadding="4" cellspacing="0" border="0" style="{ise:AppConfig('BoxFrameStyle')}">
                    <tr>
                        <td align="left" valign="top">
                            <table border="0" cellpadding="0" cellspacing="4" width="100%" class="search-grid-body">
                                <xsl:apply-templates select="/root/Departments/Department" />
                            </table>
                        </td>
                    </tr>
                </table>
                  <div class="Paging" style="float: left; padding: 3px 0px 10px 0px;">
                      <xsl:value-of select="ise:EntityPagingControl(concat($BaseURL, '&amp;EntityType=d'), $CurrentPage, root/Departments2/Department/pages, '0')" disable-output-escaping="yes" />
                  </div>
              </td>
            </tr>
          </table>
        </xsl:when>
   </xsl:choose>

   <xsl:choose>
        <xsl:when test="ise:AppConfigBool('Search_ShowManufacturersInResults')='true' and count(/root/Manufacturers/Manufacturer)>0">
          <br />
           <table width="100%" cellpadding="2" cellspacing="0" style="border-style: solid; border-width: 0px; border-color: #444444" class="search-grid-wrapper">
            <tr>
              <td align="left" valign="top">
                <img border="0" src="{concat('skins/Skin_', ise:SkinID(), '/images/matchingmanufacturers.gif')}" />
                <br />
                <table width="100%" cellpadding="4" cellspacing="0" border="0" style="{ise:AppConfig('BoxFrameStyle')}">
                    <tr>
                        <td align="left" valign="top">
                            <table border="0" cellpadding="0" cellspacing="4" width="100%" class="search-grid-body">
                                <xsl:apply-templates select="/root/Manufacturers/Manufacturer" />
                            </table>
                        </td>
                    </tr>
                </table>
                  <div class="Paging" style="float: left; padding: 3px 0px 10px 0px;">
                      <xsl:value-of select="ise:EntityPagingControl(concat($BaseURL, '&amp;EntityType=m'), $CurrentPage, /root/Manufacturers2/Manufacturer/pages, '0')" disable-output-escaping="yes" />
                  </div>
              </td>
            </tr>
          </table>
        </xsl:when>
   </xsl:choose>
        
   <xsl:choose>
        <xsl:when test="ise:AppConfigBool('Search_ShowProductsInResults')='true' and count(/root/Products/Product)>0">
            <br />
         <table width="100%" cellpadding="2" cellspacing="0" style="{concat('border-style: solid; border-width: 0px; border-color: #', ise:AppConfig('HeaderBGColor'))}" class="search-grid-wrapper">
            <tr>
              <td align="left" valign="top">
                <img align="bottom" border="0" src="{concat('skins/Skin_', ise:SkinID(), '/images/matchingproducts.gif')}" />
                <br />
                <table width="100%" cellpadding="4" cellspacing="0" border="0" style="{ise:AppConfig('BoxFrameStyle')}">
                  <tr>
                      <td align="left" valign="top">
                          <table border="0" cellpadding="0" cellspacing="4" width="100%" class="search-grid-body">
                            <xsl:if test="count(/root/Products/Product) &gt; 0">
                              <xsl:value-of select="ise:LoadBatchProductImage('product', 'icon', 'center',  boolean('true'), /root/Products/Product | following-sibling::*[position() &lt; $SearchGridColWidth])" />
                            </xsl:if>
                            <xsl:apply-templates select="/root/Products/Product" />
                          </table>                        
                      </td>
                  </tr>
                </table>
                  <div class="Paging" style="float: left; padding: 3px 0px 10px 0px;">
                      <xsl:value-of select="ise:EntityPagingControl(concat($BaseURL, '&amp;EntityType=p'), $CurrentPage, /root/Products2/Product/pages, '0')" disable-output-escaping="yes" />
                  </div>
              </td>
            </tr>       
          </table>
        </xsl:when>
    </xsl:choose>
        
    <xsl:choose>
          <xsl:when test="ise:AppConfigBool('Search_ShowAttributesInResults')='true' and count(/root/Attributes/Attribute)>0">
              <br />
              <table width="100%" cellpadding="2" cellspacing="0" style="border-style: solid; border-width: 0px; border-color: #444444" class="search-grid-wrapper">
                  <tr>
                      <td align="left" valign="top">
                          <img border="0" src="{concat('skins/Skin_', ise:SkinID(), '/images/matchingattributes.gif')}" />
                          <br />
                          <table width="100%" cellpadding="4" cellspacing="0" border="0" style="{ise:AppConfig('BoxFrameStyle')}">
                              <tr>
                                  <td align="left" valign="top">
                                        <table border="0" cellpadding="0" cellspacing="4" width="100%" class="search-grid-body">
                                          <xsl:apply-templates select="/root/Attributes/Attribute" />
                                        </table>    
                                  </td>
                              </tr>
                          </table>
                        <div class="Paging" style="float: left; padding: 3px 0px 10px 0px;">
                          <xsl:value-of select="ise:EntityPagingControl(concat($BaseURL, '&amp;EntityType=a'), $CurrentPage, /root/Attributes2/Attribute/pages, '0')" disable-output-escaping="yes" />
                        </div>
                      </td>
                  </tr>
              </table>
          </xsl:when>
   </xsl:choose>
       
        <xsl:if test="/root/QueryString/searchterm and count(/root/Categories/Category)=0 and count(/root/Departments/Department)=0 and count(/root/Manufacturers/Manufacturer)=0 and count(/root/Products/Product)=0 and count(/root/Attributes/Attribute)=0">
          <p align="left">
            <xsl:value-of select="ise:StringResource('search.aspx.8', $LocaleSetting)" disable-output-escaping="yes" />
            <b />
          </p>
        </xsl:if>
        
        <script type="text/javascript" Language="JavaScript">
          document.AdvSearchForm.SearchTerm.focus();
        </script>
        <xsl:value-of select="ise:Topic('SearchPageFooter')" disable-output-escaping="yes" />
      </xsl:template>

      <xsl:template name="EntityCell">
        <xsl:param name="EntityType"></xsl:param>
        <xsl:param name="CellWidth" select="100 div $SearchGridColWidth" />
        <xsl:param name="pDisplayName" select="Description" />
        <xsl:param name="URL" select="ise:MakeEntityLink($EntityType, Counter,$pDisplayName)" />

        <td align="center" valign="top" width="{$CellWidth}%" class="grid-item" >
          <div>
            <a href="{$URL}">
              <xsl:value-of select="ise:LookupEntityImage(EntityID, $pDisplayName, 'icon', 0)" disable-output-escaping="yes" />
            </a>
            <br />
          </div>

          <div class="item-title">
            <a href="{$URL}">
              <xsl:value-of select="ise:Encode($pDisplayName)" disable-output-escaping="yes" />
            </a>
          </div>
        </td>
      </xsl:template>
      
      <xsl:template name="ProductCell">
            <xsl:param name="CellWidth" select="100 div $SearchGridColWidth" />
            <xsl:param name="pDisplayName">
                <xsl:choose>
                    <xsl:when test="string-length(ItemDescription)>0">
                        <xsl:value-of select="ItemDescription" />
                    </xsl:when>
                    <xsl:otherwise>
                        <xsl:value-of select="ItemName" />
                    </xsl:otherwise>
                </xsl:choose>
            </xsl:param>

        <xsl:variable name="item_href">
          <xsl:choose>
            <xsl:when test="UnitMeasureCode">
              <xsl:value-of select="ise:MakeEntityLinkWithUOM('product',Counter,$pDisplayName, UnitMeasureCode)" />
            </xsl:when>
            <xsl:otherwise>
              <xsl:value-of select="ise:MakeEntityLink('product',Counter,$pDisplayName)" />
            </xsl:otherwise>
          </xsl:choose>
        </xsl:variable>
        
            <td align="center" valign="top" width="{$CellWidth}%" class="grid-item" >
                <div>
                    <a href="{$item_href}">
                        <xsl:value-of select="ise:DisplayImage('product', Counter, 'icon', SEAltText, 'AltText')" disable-output-escaping="yes" />
                    </a>
                </div>
                <div class="item-title">
                    <a href="{$item_href}">
                        <xsl:value-of select="ise:Encode($pDisplayName)" disable-output-escaping="yes" />
                    </a>
                </div>
            </td>
        </xsl:template>

      <xsl:template match="Product">
        <xsl:variable name="delta">
          <xsl:choose>
            <xsl:when test="(count(/root/Products/Product) mod number($SearchGridColWidth)) = 0">0</xsl:when>
            <xsl:otherwise>
              <xsl:value-of select="number($SearchGridColWidth)-(count(/root/Products/Product) mod number($SearchGridColWidth))" />
            </xsl:otherwise>
          </xsl:choose>
        </xsl:variable>

        <xsl:variable name="rows" select="ceiling(count(/root/Products/Product) div number($SearchGridColWidth))" />

        <xsl:if test="position() mod $SearchGridColWidth = 1 and $SearchGridColWidth &gt; 1">
          <tr>
            <xsl:for-each select=". | following-sibling::*[position() &lt; $SearchGridColWidth]">
              <xsl:call-template name="ProductCell"></xsl:call-template>
            </xsl:for-each>

            <xsl:if test="ceiling(position() div  number($SearchGridColWidth)) = $rows and $delta &gt; 0">
              <xsl:call-template name="FillerCells">
                <xsl:with-param name="cellCount" select="$delta" />
              </xsl:call-template>
            </xsl:if>
          </tr>
        </xsl:if>
      </xsl:template>

      <xsl:template match="Category">
        <xsl:variable name="delta">
          <xsl:choose>
            <xsl:when test="(count(/root/Categories/Category) mod number($SearchGridColWidth)) = 0">0</xsl:when>
            <xsl:otherwise>
              <xsl:value-of select="number($SearchGridColWidth)-(count(/root/Categories/Category) mod number($SearchGridColWidth))" />
            </xsl:otherwise>
          </xsl:choose>
        </xsl:variable>
        <xsl:variable name="rows" select="ceiling(count(/root/Categories/Category) div number($SearchGridColWidth))" />

        <xsl:if test="position() mod $SearchGridColWidth = 1 or ($SearchGridColWidth = 1)">
          <tr>
            <xsl:for-each select=". | following-sibling::*[position() &lt; $SearchGridColWidth]">
              <xsl:variable name="EntityType">category</xsl:variable>
              <xsl:call-template name="EntityCell">
                <xsl:with-param name="EntityType" select="$EntityType" />
              </xsl:call-template>
            </xsl:for-each>

            <xsl:if test="ceiling(position() div  number($SearchGridColWidth)) = $rows and $delta &gt; 0">
              <xsl:call-template name="FillerCells">
                <xsl:with-param name="cellCount" select="$delta" />
              </xsl:call-template>
            </xsl:if>
          </tr>
        </xsl:if>
      </xsl:template>

      <xsl:template match="Department">
        <xsl:variable name="delta">
          <xsl:choose>
            <xsl:when test="(count(/root/Departments/Department) mod number($SearchGridColWidth)) = 0">0</xsl:when>
            <xsl:otherwise>
              <xsl:value-of select="number($SearchGridColWidth)-(count(/root/Departments/Department) mod number($SearchGridColWidth))" />
            </xsl:otherwise>
          </xsl:choose>
        </xsl:variable>
        <xsl:variable name="rows" select="ceiling(count(/root/Departments/Department) div number($SearchGridColWidth))" />

        <xsl:if test="position() mod $SearchGridColWidth = 1 or ($SearchGridColWidth = 1)">
          <tr>
            <xsl:for-each select=". | following-sibling::*[position() &lt; $SearchGridColWidth]">
              <xsl:variable name="EntityType">department</xsl:variable>
              <xsl:call-template name="EntityCell">
                <xsl:with-param name="EntityType" select="$EntityType" />
              </xsl:call-template>
            </xsl:for-each>

            <xsl:if test="ceiling(position() div  number($SearchGridColWidth)) = $rows and $delta &gt; 0">
              <xsl:call-template name="FillerCells">
                <xsl:with-param name="cellCount" select="$delta" />
              </xsl:call-template>
            </xsl:if>
          </tr>
        </xsl:if>
      </xsl:template>

      <xsl:template match="Manufacturer">
        <xsl:variable name="delta">
          <xsl:choose>
            <xsl:when test="(count(/root/Manufacturers/Manufacturer) mod number($SearchGridColWidth)) = 0">0</xsl:when>
            <xsl:otherwise>
              <xsl:value-of select="number($SearchGridColWidth)-(count(/root/Manufacturers/Manufacturer) mod number($SearchGridColWidth))" />
            </xsl:otherwise>
          </xsl:choose>
        </xsl:variable>
        <xsl:variable name="rows" select="ceiling(count(/root/Manufacturers/Manufacturer) div number($SearchGridColWidth))" />

        <xsl:if test="position() mod $SearchGridColWidth = 1 or ($SearchGridColWidth = 1)">
          <tr>
            <xsl:for-each select=". | following-sibling::*[position() &lt; $SearchGridColWidth]">
              <xsl:variable name="EntityType">manufacturer</xsl:variable>
              <xsl:call-template name="EntityCell">
                <xsl:with-param name="EntityType" select="$EntityType" />
              </xsl:call-template>
            </xsl:for-each>

            <xsl:if test="ceiling(position() div  number($SearchGridColWidth)) = $rows and $delta &gt; 0">
              <xsl:call-template name="FillerCells">
                <xsl:with-param name="cellCount" select="$delta" />
              </xsl:call-template>
            </xsl:if>
          </tr>
        </xsl:if>
      </xsl:template>

      <xsl:template match="Attribute">
        <xsl:variable name="delta">
          <xsl:choose>
            <xsl:when test="(count(/root/Attributes/Attribute) mod number($SearchGridColWidth)) = 0">0</xsl:when>
            <xsl:otherwise>
              <xsl:value-of select="number($SearchGridColWidth)-(count(/root/Attributes/Attribute) mod number($SearchGridColWidth))" />
            </xsl:otherwise>
          </xsl:choose>
        </xsl:variable>
        <xsl:variable name="rows" select="ceiling(count(/root/Attributes/Attribute) div number($SearchGridColWidth))" />

        <xsl:if test="position() mod $SearchGridColWidth = 1 or ($SearchGridColWidth = 1)">
          <tr>
            <xsl:for-each select=". | following-sibling::*[position() &lt; $SearchGridColWidth]">
              <xsl:call-template name="AttrCell">
              </xsl:call-template>
            </xsl:for-each>

            <xsl:if test="ceiling(position() div  number($SearchGridColWidth)) = $rows and $delta &gt; 0">
              <xsl:call-template name="FillerCells">
                <xsl:with-param name="cellCount" select="$delta" />
              </xsl:call-template>
            </xsl:if>
          </tr>
        </xsl:if>
      </xsl:template>

      <xsl:template name="AttrCell">
        <xsl:param name="pDisplayName">
          <xsl:choose>
            <xsl:when test="string-length(SourceFilterName)>0">
              <xsl:value-of select="SourceFilterName" />
            </xsl:when>
          </xsl:choose>
        </xsl:param>

        <xsl:param name="pEntityType">
          <xsl:choose>
            <xsl:when test="string-length(EntityType)>0">
              <xsl:value-of select="EntityType" />
            </xsl:when>
          </xsl:choose>
        </xsl:param>

        <xsl:param name="CellWidth" select="100 div $SearchGridColWidth" />

        <td align="center" valign="top" width="{$CellWidth}%" class="grid-item" >

          <div class="item-title">
            <a href="{concat('a-',Counter,'-',ise:FormatStringForLink($pDisplayName),'.aspx','?EntityID=',EntityCode,'&amp;','EntityName=',EntityType, '&amp;','atr=', concat(EntityCounter,'-', ise:FormatStringForLink(EntityCode)))}">
              <xsl:value-of select="ise:Encode($pDisplayName)" disable-output-escaping="yes" />
            </a>
          </div>

          <div>
            <xsl:value-of select="ise:StringResource('search.aspx.11', $LocaleSetting)" disable-output-escaping="yes" />:
            <xsl:value-of select="EntityType" disable-output-escaping="yes" />
          </div>

          <div>
            <xsl:value-of select="ise:StringResource('search.aspx.12', $LocaleSetting)" disable-output-escaping="yes" />:

            <xsl:if test ="$pEntityType = 'Category'">
              <a href="{concat('c-',EntityCounter,'-',ise:FormatStringForLink(EntityCode),'.aspx')}">
                <xsl:value-of select="ise:Encode(EntityCode)" disable-output-escaping="yes" />
              </a>
            </xsl:if>

            <xsl:if test ="$pEntityType = 'Department'">
              <a href="{concat('d-',EntityCounter,'-',ise:FormatStringForLink(EntityCode),'.aspx')}">
                <xsl:value-of select="ise:Encode(EntityCode)" disable-output-escaping="yes" />
              </a>
            </xsl:if>
          </div>

          <div>
            <xsl:value-of select="ise:StringResource('search.aspx.10', $LocaleSetting)" disable-output-escaping="yes" />:
            <xsl:value-of select="ise:Encode(AttributeName)" disable-output-escaping="yes" />
          </div>

        </td>
      </xsl:template>

      <xsl:template name="FillerCells">
        <xsl:param name="cellCount" />
        <xsl:param name="CellWidth" select="100 div $SearchGridColWidth" />
        <td width="{$CellWidth}%">&#160;</td>
        <xsl:if test="$cellCount > 1">
          <xsl:call-template name="FillerCells">
            <xsl:with-param name="cellCount" select="$cellCount - 1" />
          </xsl:call-template>
        </xsl:if>
      </xsl:template>
      
      <xsl:template match="Distributor">
        <xsl:param name="DistID" select="DistributorID" />
        <xsl:for-each select="/root/EntityHelpers/Distributor/descendant::Entity[EntityID=$DistID]">
          <tr>
            <td align="left" valign="top">
              <xsl:call-template name="entitybreadcrumb">
                <xsl:with-param name="entityprefix" select="'d'" />
              </xsl:call-template>
            </td>
          </tr>
        </xsl:for-each>
      </xsl:template>
      
      <xsl:template name="entitybreadcrumb">
        <xsl:param name="entityprefix" />
        <xsl:for-each select="ancestor-or-self::*[child::SEName and ancestor::EntityHelpers]">
          <xsl:variable name="pEName">
            <xsl:choose>
              <xsl:when test="count(Name/ml/locale[@name=$LocaleSetting])!=0">
                <xsl:value-of select="Name/ml/locale[@name=$LocaleSetting]" />
              </xsl:when>
              <xsl:when test="count(Name/ml/locale[@name=$WebConfigLocaleSetting])!=0">
                <xsl:value-of select="Name/ml/locale[@name=$WebConfigLocaleSetting]" />
              </xsl:when>
              <xsl:when test="count(Name/ml)=0">
                <xsl:value-of select="ise:GetMLValue(Description)" />
              </xsl:when>
            </xsl:choose>
          </xsl:variable>
          <a href="{concat($entityprefix, '-', EntityID, '-', ise:FormatStringForLink(SEName), '.aspx')}">
            <xsl:value-of select="$pEName" />
          </a>&#0160;<xsl:if test="position()!=last()">-</xsl:if>&#0160;
        </xsl:for-each>
      </xsl:template>
      <xsl:template match="ItemType">
        <option value="{ItemType}">
          <xsl:if test="ItemType=/root/QueryString/itemtype">
            <xsl:attribute name="selected">selected</xsl:attribute>
          </xsl:if>
          <xsl:value-of select="ItemType" />
        </option>
      </xsl:template>
      <xsl:template match="UnitMeasure">
        <option value="{UnitMeasureCode}">
          <xsl:if test="UnitMeasureCode=/root/QueryString/unitmeasure">
            <xsl:attribute name="selected">selected</xsl:attribute>
          </xsl:if>
          <xsl:value-of select="UnitMeasureDescription" />
        </option>
      </xsl:template>
      <xsl:template name="EntityOption">
        <xsl:param name="prefix" />
        <xsl:param name="selected" />
        <xsl:param name="eName">
          <xsl:choose>
            <xsl:when test="count(Name/ml/locale[@name=$LocaleSetting])!=0">
              <xsl:value-of select="Name/ml/locale[@name=$LocaleSetting]" />
            </xsl:when>
            <xsl:when test="count(Name/ml/locale[@name=$WebConfigLocaleSetting])!=0">
              <xsl:value-of select="Name/ml/locale[@name=$WebConfigLocaleSetting]" />
            </xsl:when>
            <xsl:when test="count(Name/ml)=0">
              <xsl:value-of select="Name" />
            </xsl:when>
          </xsl:choose>
        </xsl:param>
        <option value="{EntityID}">
          <xsl:if test="$selected=EntityID">
            <xsl:attribute name="selected">selected</xsl:attribute>
          </xsl:if>
          <xsl:value-of select="concat($prefix, $eName)" />
        </option>
        <xsl:for-each select="Entity">
          <xsl:call-template name="EntityOption">
            <xsl:with-param name="prefix" select="concat($prefix, $eName, ' -&gt; ')" />
            <xsl:with-param name="selected" select="$selected" />
          </xsl:call-template>
        </xsl:for-each>
      </xsl:template>
    
</xsl:stylesheet>
  </PackageTransform>
</package>












