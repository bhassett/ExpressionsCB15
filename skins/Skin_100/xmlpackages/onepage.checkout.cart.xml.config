<?xml version="1.0" standalone="yes"?>
<package version="2.1" displayname="MiniCart" includeentityhelper="true" debug="false">

  <!-- ###################################################################################################### -->
  <!-- Licensed by Interprise Solutions.					                          -->
  <!-- http://www.InterpriseSolutions.com														                                          -->
  <!-- For details on this license please visit  the product homepage at the URL above.		                    -->
  <!-- THE ABOVE NOTICE MUST REMAIN INTACT.                                                                   -->
  <!-- ###################################################################################################### -->

  <query name="OrderSummary" rowElementName="ItemsToBeShipped">
    <sql>
      <![CDATA[
                exec GetEcommerceShoppingCart @CartType, @CustomerID, @WebSiteCode, @WarehouseCode, @LanguageCode, @ContactCode
            ]]>
    </sql>
    <queryparam paramname="@CartType" paramtype="runtime" requestparamname="CartType" sqlDataType="int" defvalue="" validationpattern="" />
    <queryparam paramname="@CustomerID" paramtype="runtime" requestparamname="CustomerID" sqlDataType="nvarchar" defvalue="" validationpattern="" />
    <queryparam paramname="@WebSiteCode" paramtype="runtime" requestparamname="WebSiteCode" sqlDataType="nvarchar" defvalue="" validationpattern="" />
    <queryparam paramname="@WarehouseCode" paramtype="runtime" requestparamname="WarehouseCode" sqlDataType="nvarchar" defvalue="" validationpattern="" />
    <queryparam paramname="@LanguageCode" paramtype="runtime" requestparamname="LanguageCode" sqlDataType="nvarchar" defvalue="" validationpattern="" />
    <queryparam paramname="@ContactCode" paramtype="runtime" requestparamname="ContactCode" sqlDataType="nvarchar" defvalue="" validationpattern="" />

  </query>

  <PackageTransform>

    <xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform"
                    xmlns:ise="urn:ise" exclude-result-prefixes="ise"
                    xmlns:exsl="http://exslt.org/common"
                    extension-element-prefixes="exsl">
      <xsl:output method="html" omit-xml-declaration="yes"/>

      <xsl:param name="ShowStockHints">
        <xsl:value-of select="ise:AppConfig('ShowStockHints')" />
      </xsl:param>

      <xsl:param name="ShowActualInventory">
        <xsl:value-of select="ise:AppConfig('ShowActualInventory')" />
      </xsl:param>

      <xsl:param name="VAT.Enabled">
        <xsl:value-of select="ise:AppConfig('VAT.Enabled')" />
      </xsl:param>

      <xsl:param name="stringActualInventory" select="ise:StringResource('showproduct.aspx.47')" />
      <xsl:param name="stringExVAT" select="ise:StringResource('showproduct.aspx.37')" />
      <xsl:param name="stringIncVAT" select="ise:StringResource('showproduct.aspx.38')" />
      <xsl:param name="stringVAT" select="ise:StringResource('showproduct.aspx.41')" />
      <xsl:param name="shippingRateCaption" select="ise:StringResource('shoppingcart.aspx.10')" />
      <xsl:param name="stringExShipping" select="ise:StringResource('checkout1.aspx.8')"/>
      <xsl:template match="/">
        <xsl:choose>
          <xsl:when test="count(/root/OrderSummary/ItemsToBeShipped) &gt; 0">
            <!--miniCart Line Items-->
            
            <div>
              <ul class="items-to-be-shipped-ul">
                <xsl:for-each select="root/OrderSummary/ItemsToBeShipped">
                  <li>
                    <div>

                      <div class="opc-items-to-be-shipped-wrapper">

                        <div class="clear-both height-12"></div>
                        <div class="clear-both height-5"></div>

                        <div class="items-to-be-shipped-left">
                          <div id="{ItemCounter}">
                            <xsl:value-of select="ise:DisplayImage('product', ItemCounter, 'icon', 'center')" disable-output-escaping="yes" />
                          </div>
                        </div>

                        <div class="items-to-be-shipped-right">
                          <div class="opc-item-name opc-items-to-be-shipped float-left">
                            <xsl:variable name="pDisplayName">
                              <xsl:choose>
                                <xsl:when test="string-length(ItemDescription)>0">
                                  <xsl:value-of select="ItemDescription" />
                                </xsl:when>
                                <xsl:otherwise>
                                  <xsl:value-of select="ItemName" />
                                </xsl:otherwise>
                              </xsl:choose>
                            </xsl:variable>

                            <xsl:choose>

                              <xsl:when test="ItemType = 'Matrix Item'">
                                <a href="{ise:GetLinkForMatrix(ItemCode)}" title="{$pDisplayName}">
                                  <xsl:value-of select="ise:Encode(ise:Ellipses($pDisplayName, 45, 'false'))" disable-output-escaping="yes" />
                                </a>
                              </xsl:when>

                              <xsl:otherwise>
                                <a href="{ise:ProductLink(ItemCounter, ise:FormatStringForLink(ise:Ellipses($pDisplayName, 9, 'false')), 0)}" title="{$pDisplayName}">
                                  <xsl:value-of select="ise:Encode(ise:Ellipses($pDisplayName, 45, 'false'))" disable-output-escaping="yes" />
                                </a>
                              </xsl:otherwise>

                            </xsl:choose>
                          </div>

                          <div  class="opc-items-to-be-shipped opc-sales-price float-left">
                            <xsl:choose>

                              <xsl:when test="$VAT.Enabled = 'true'">
                                <xsl:variable name="VatSetting" select="ise:VATSettingForCustomer()"/>
                                <xsl:variable name="Price" select="ise:GetPriceForMinicartItem(ItemCode, ItemType, ShoppingCartRecGUID)"></xsl:variable>
                                <xsl:variable name="ItemPrice" select="$Price * Quantity"/>

                                <xsl:choose>

                                  <xsl:when test="$VatSetting = 2">
                                    <xsl:variable name="TotalPrice">
                                      <xsl:variable name="SubPrice">
                                        <xsl:choose>
                                          <xsl:when test="ItemType = 'Kit'">
                                            <xsl:value-of select="ise:GetKitPricePackage(ItemCode, 0)"/>
                                          </xsl:when>
                                          <xsl:otherwise>
                                            <xsl:value-of select="ise:GetProductPrice(ItemCode, 0)"/>
                                          </xsl:otherwise>
                                        </xsl:choose>
                                      </xsl:variable>
                                      <number>
                                        <xsl:value-of select="$SubPrice"/>
                                      </number>
                                    </xsl:variable>
                                    <xsl:value-of select="concat(ise:FormatCurrency(sum(exsl:node-set($TotalPrice)/number), ''), ' ')" disable-output-escaping="yes" />
                                  </xsl:when>

                                  <xsl:otherwise>
                                    <xsl:value-of select="ise:FormatCurrency($ItemPrice)"/>
                                  </xsl:otherwise>

                                </xsl:choose>

                              </xsl:when>

                              <xsl:otherwise>
                                <xsl:variable name="TotalPrice">
                                  <xsl:variable name="SubPrice">
                                    <xsl:choose>
                                      <xsl:when test="ItemType = 'Kit'">
                                        <xsl:value-of select="ise:GetKitPricePackage(ItemCode, 0)"/>
                                      </xsl:when>
                                      <xsl:otherwise>
                                        <xsl:value-of select="ise:GetProductPrice(ItemCode, 0)"/>
                                      </xsl:otherwise>
                                    </xsl:choose>
                                  </xsl:variable>
                                  <xsl:variable name="Quantity" select="Quantity"></xsl:variable>
                                  <number>
                                    <xsl:value-of select="$SubPrice"/>
                                  </number>
                                </xsl:variable>
                                <xsl:value-of select="ise:FormatCurrency(sum(exsl:node-set($TotalPrice)/number), '')" disable-output-escaping="yes" />
                              </xsl:otherwise>
                            </xsl:choose>

                          </div>

                          <div class="opc-quantity opc-items-to-be-shipped float-left">
                            <xsl:value-of select="ise:FormatDecimal(Quantity, 0)"/>
                          </div>

                          <div class="opc-sub-total opc-items-to-be-shipped float-left">
                            <xsl:choose>

                              <xsl:when test="$VAT.Enabled = 'true'">
                                <xsl:variable name="VatSetting" select="ise:VATSettingForCustomer()"/>
                                <xsl:variable name="Price" select="ise:GetPriceForMinicartItem(ItemCode, ItemType, ShoppingCartRecGUID)"></xsl:variable>
                                <xsl:variable name="ItemPrice" select="$Price * Quantity"/>

                                <xsl:choose>

                                  <xsl:when test="$VatSetting = 2">
                                    <xsl:variable name="TotalPrice">
                                      <xsl:variable name="SubPrice">
                                        <xsl:choose>
                                          <xsl:when test="ItemType = 'Kit'">
                                            <xsl:value-of select="ise:GetKitPricePackage(ItemCode, 0)"/>
                                          </xsl:when>
                                          <xsl:otherwise>
                                            <xsl:value-of select="ise:GetProductPrice(ItemCode, 0)"/>
                                          </xsl:otherwise>
                                        </xsl:choose>
                                      </xsl:variable>
                                      <xsl:variable name="Quantity" select="Quantity"></xsl:variable>
                                      <number>
                                        <xsl:value-of select="$SubPrice * $Quantity"/>
                                      </number>
                                    </xsl:variable>
                                    <xsl:value-of select="concat(ise:FormatCurrency(sum(exsl:node-set($TotalPrice)/number), ''), ' ', $stringExVAT)" disable-output-escaping="yes" />
                                    <br/>
                                    <xsl:value-of select="concat($stringVAT, ise:FormatCurrency($ItemPrice), '')"/>
                                  </xsl:when>

                                  <xsl:otherwise>
                                    <span class="strong-font">
                                      <xsl:value-of select="concat(ise:FormatCurrency($ItemPrice, ''), ' ' , $stringIncVAT)"/>
                                    </span>
                                  </xsl:otherwise>

                                </xsl:choose>

                              </xsl:when>

                              <xsl:otherwise>
                                <xsl:variable name="SubPrice">
                                  <xsl:choose>
                                    <xsl:when test="ItemType = 'Kit'">
                                      <xsl:value-of select="ise:GetKitPricePackage(ItemCode, 0)"/>
                                    </xsl:when>
                                    <xsl:otherwise>
                                      <xsl:value-of select="ise:GetProductPrice(ItemCode, 0)"/>
                                    </xsl:otherwise>
                                  </xsl:choose>
                                </xsl:variable>
                                <xsl:variable name="Quantity" select="Quantity"></xsl:variable>
                                
                                <xsl:variable name="TotalPrice">
                                  <number>
                                    <xsl:value-of select="$SubPrice * $Quantity"/>
                                  </number>
                                </xsl:variable>
                                
                                <xsl:variable name="DiscountPercentage">
                                   <xsl:value-of select="ise:GetDiscountInfo('discount-percentage', ItemCode, $SubPrice, $Quantity, CouponCode)"/>
                                </xsl:variable>
                                <xsl:variable name="DiscountedSubTotal">
                                   <xsl:value-of select="ise:GetDiscountInfo('discounted-sub-total', ItemCode, $SubPrice, $Quantity, CouponCode)"/>
                                </xsl:variable>
                                <xsl:variable name="DiscountRate">
                                    <xsl:value-of select="ise:GetDiscountInfo('discount-rate', ItemCode, $SubPrice, $Quantity, CouponCode)"/>
                                </xsl:variable>
                        
                                <div class="strong-font">
                                  <xsl:value-of select="ise:FormatCurrency(sum(exsl:node-set($TotalPrice)/number), '')" disable-output-escaping="yes" />
                                </div>
                                <xsl:if test="CouponCode != ''">
                                    <div class="clear-both" style="height:2px;"></div>
                                    <div style="border-bottom:1px solid #ccc;float:right;">
                                      
                                      Discount (<xsl:value-of select="$DiscountPercentage" disable-output-escaping="yes" />) : - <xsl:value-of select="$DiscountRate" disable-output-escaping="yes" />
                                      
                                    </div>
                                    <div class="clear-both" style="height:2px;"></div>
                                    <div>
                                      <xsl:value-of select="$DiscountedSubTotal" disable-output-escaping="yes" />
                                    </div>
                                </xsl:if>
                           
                              </xsl:otherwise>

                            </xsl:choose>

                          </div>

                          <div class="clear-both height-12"></div>
                          <div class="clear-both height-5" style="  border-top: 1px dashed #CCCCCC; padding-top: 2px;width: 458px;"></div>

                          <xsl:if test="ItemType != 'Non-Stock' and ItemType != 'Service' and ItemType != 'Electronic Download'">
                            <xsl:choose>
                              <xsl:when test="FreeStock &gt; 0">
                                <xsl:choose>
                                  <xsl:when test="$ShowStockHints = 'true'">
                                    <xsl:choose>
                                      <xsl:when test="$ShowActualInventory = 'true'">
                                        <xsl:value-of select="concat(ise:GetFreeStock(ItemCode), ' ', $stringActualInventory)" disable-output-escaping="yes" />
                                      </xsl:when>
                                      <xsl:otherwise>
                                        <img src="images/instock.png"/>
                                      </xsl:otherwise>
                                    </xsl:choose>
                                  </xsl:when >
                                  <xsl:otherwise>
                                  </xsl:otherwise>
                                </xsl:choose >
                              </xsl:when>
                              <xsl:otherwise>
                                <img src="images/outofstock.png"/>
                              </xsl:otherwise>
                            </xsl:choose>
                          </xsl:if>
                          <div class="clear-both height-5"></div>
                          <div class="clear-both height-5"></div>
                        </div>

                        <div class="clear-both height-5"></div>
                        <div class="clear-both height-12"></div>
                        <div class="clear-both height-5"></div>
                      </div>

                      <div class="clear-both height-5"></div>

                    </div>
                  </li>
                </xsl:for-each>
              </ul>
            </div>
          </xsl:when>
          <xsl:otherwise>

            <xsl:value-of select="ise:Topic('EMPTYCARTTEXT')" disable-output-escaping="yes" />

          </xsl:otherwise>
        </xsl:choose>

      </xsl:template>
    </xsl:stylesheet>
  </PackageTransform>
</package>