<?xml version="1.0" standalone="yes"?>
<package version="2.1" displayname="MiniCartAccessory" includeentityhelper="true" debug="false">

  <!-- ###################################################################################################### -->
  <!-- Licensed by Interprise Solutions.					                          -->
  <!-- http://www.InterpriseSolutions.com														                                          -->
  <!-- For details on this license please visit  the product homepage at the URL above.		                    -->
  <!-- THE ABOVE NOTICE MUST REMAIN INTACT.                                                                   -->
  <!-- ###################################################################################################### -->

  <query name="MiniCartAccessory" rowElementName="MiniCartAccessoryItems">
    <sql>
      <![CDATA[ 
            exec EcommerceGetAccessoryItemsForMiniCart @ContactCode, @WebSiteCode, @ItemCode, @LanguageCode, @CurrentDate, @ProductFilterID, @CustomerCode
            ]]>
    </sql>
    <queryparam paramname="@ContactCode" paramtype="runtime" requestparamname="ContactCode" sqlDataType="nvarchar" defvalue="" validationpattern="" />
    <queryparam paramname="@WebSiteCode" paramtype="runtime" requestparamname="WebSiteCode" sqlDataType="nvarchar" defvalue="" validationpattern="" />
    <queryparam paramname="@ItemCode" paramtype="runtime" requestparamname="ItemCode" sqlDataType="nvarchar" defvalue="" validationpattern="" />
    <queryparam paramname="@LanguageCode" paramtype="runtime" requestparamname="LanguageCode" sqlDataType="nvarchar" defvalue="" validationpattern="" />
    <queryparam paramname="@CurrentDate" paramtype="runtime" requestparamname="CurrentDateTime" sqlDataType="datetime" defvalue="" validationpattern="" />
    <queryparam paramname="@ProductFilterID" paramtype="runtime" requestparamname="ProductFilterID" sqlDataType="nvarchar" defvalue="" validationpattern="" />
    <queryparam paramname="@CustomerCode" paramtype="runtime" requestparamname="CustomerCode" sqlDataType="nvarchar" defvalue="" validationpattern="" />
  </query>

  <PackageTransform>

    <xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform"
                    xmlns:ise="urn:ise" exclude-result-prefixes="ise">
      <xsl:output method="html" omit-xml-declaration="yes"/>

      <xsl:param name="ShowStockHints">
        <xsl:value-of select="ise:AppConfig('ShowStockHints')" />
      </xsl:param>

      <xsl:param name="ShowActualInventory">
        <xsl:value-of select="ise:AppConfig('ShowActualInventory')" />
      </xsl:param>

      <xsl:param name="VAT.Enabled">
        <xsl:value-of select="ise:AppConfig('VAT.Enabled')" />
      </xsl:param>

      <xsl:param name="stringActualInventory" select="ise:StringResource('showproduct.aspx.47')" />
      <xsl:param name="stringExVAT" select="ise:StringResource('showproduct.aspx.37')" />
      <xsl:param name="stringIncVAT" select="ise:StringResource('showproduct.aspx.38')" />
      
      <xsl:template match="/">

        <script type="text/javascript" src="jscripts/carousel.js"></script>

        <xsl:choose>
          <xsl:when test="count(/root/MiniCartAccessory/MiniCartAccessoryItems) &gt; 0">
            <div id="mini">
              <div style="float: left">
                <b>
                  <xsl:value-of select="ise:StringResource('showproduct.aspx.51')"/>
                </b>
              </div>
              <div style="clear: both"></div>

              <div id="mini-Accessory" class="miniCartCarousel">
                <div class="wrapper3" style="overflow: hidden;">
                  <ul>
                    <xsl:for-each select="root/MiniCartAccessory/MiniCartAccessoryItems">
                      <li class="l-acc">
                        <center>
                          <!--Image-->
                          <xsl:value-of select="ise:DisplayImage('product', Counter, 'minicart', 'center')" disable-output-escaping="yes" />
                          <!--Item Name / Item Description-->
                          <xsl:variable name="pDisplayName">
                            <xsl:choose>
                              <xsl:when test="string-length(ItemDescription)>0">
                                <xsl:value-of select="ItemDescription" />
                              </xsl:when>
                              <xsl:otherwise>
                                <xsl:value-of select="AccessoryName" />
                              </xsl:otherwise>
                            </xsl:choose>
                          </xsl:variable>
                          <a href="{ise:ProductLink(Counter, ise:FormatStringForLink(ise:Ellipses($pDisplayName, 15, false)), 0, '')}" title="{$pDisplayName}">
                            <xsl:value-of select="ise:Encode(ise:Ellipses($pDisplayName, 15, false))" disable-output-escaping="yes" />
                          </a>
                          <br></br>
                          <!--Price-->
                          <xsl:choose>

                            <xsl:when test="$VAT.Enabled = 'true'">

                              <xsl:variable name="VatSetting" select="ise:VATSettingForCustomer()"/>

                              <xsl:choose>

                                <xsl:when test="$VatSetting = 2">
                                  <xsl:value-of select="concat(ise:GetProductPrice(AccessoryCode, 1), ' ' , $stringExVAT)"/>
                                </xsl:when>

                                <xsl:otherwise>
									<xsl:value-of select="concat(ise:FormatCurrency(ise:GetAccessoryItemPriceForMinicart(AccessoryCode),' '), ' ' , $stringIncVAT)"/>
                                </xsl:otherwise>

                              </xsl:choose>

                            </xsl:when>

                            <xsl:otherwise>
                              <xsl:value-of select="ise:GetProductPrice(AccessoryCode, 1)"/>
                            </xsl:otherwise>

                          </xsl:choose>
                          <br></br>
                          <!--Stock Hint-->
                          <xsl:variable name="FreeStock" select="ise:GetFreeStock(AccessoryCode)"/>
                          <xsl:choose>
                            <xsl:when test="$FreeStock &gt; 0">
                              <xsl:choose>
                                <xsl:when test="$ShowStockHints = 'true'">
                                  <xsl:choose>
                                    <xsl:when test="$ShowActualInventory = 'true'">
                                      <xsl:value-of select="concat(ise:GetFreeStock(AccessoryCode), ' ', $stringActualInventory)" disable-output-escaping="yes" />
                                    </xsl:when>
                                    <xsl:otherwise>
                                      <img src="images/instock.png"/>
                                    </xsl:otherwise>
                                  </xsl:choose>
                                </xsl:when>
                                <xsl:otherwise>
                                </xsl:otherwise>
                              </xsl:choose >
                            </xsl:when>
                            <xsl:otherwise>
                              <img src="images/outofstock.png"/>
                            </xsl:otherwise>
                          </xsl:choose>
                          <br></br>
                          <!--Checkboxes-->
                          <div id="{Counter}" class="chkAccItem">
                            <input id ="chkcom_{Counter}" name="chkcom_{Counter}" type= "checkbox"></input>
                          </div>
                        </center>
                      </li>
                    </xsl:for-each >
                  </ul>
                </div>
              </div>
            </div>
          </xsl:when>
        </xsl:choose>
      </xsl:template>

    </xsl:stylesheet>
  </PackageTransform>
</package>

