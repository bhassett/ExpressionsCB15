var global_postal = ""; (function (b) { var f = { init: function (a) { a = b.extend({ "country-id": "#BillingAddressControl_drpCountry", "postal-id": "#BillingAddressControl_txtPostal", "city-id": "#BillingAddressControl_txtCity", "state-id": "#BillingAddressControl_txtState", "city-state-place-holder": ".billing-zip-city-other-place-holder", "enter-postal-label-place-holder": "#billing-enter-postal-label-place-holder", "city-states-id": "billing-city-states" }, a); b(this).ISEAddressFinder("initEventsListener", a); var c = b(a["country-id"]).val(); b(this).ISEAddressFinder("removeErrorTagsOnAddressControl", a); b(this).ISEAddressFinder("optionalPostalCodeHandler", { postalId: a["postal-id"], statePlaceHolder: a["city-state-place-holder"], cityStatesId: a["city-states-id"], country: c, isOnInit: !0 }) }, initEventsListener: function (a) { var c = b(this); c.keypress(function (d) { var e = b(this).hasClass("is-postal-optional"); if (13 == d.which) { if (e) return !1; b(this).removeClass("skip-getting-city"); c.ISEAddressFinder("resetPostalCodePlaceHoder", a); c.ISEAddressFinder("renderCityState", a); return !1 } }); c.blur(function () { var d = b(this).hasClass("skip-getting-city"), e = b(this).hasClass("is-postal-optional"); if (d || e) return !1; c.ISEAddressFinder("renderCityState", a) }); c.keyup(function (d) { "" == trimString(b(this).val()) && 8 == d.keyCode && c.ISEAddressFinder("resetPostalCodePlaceHoder", a) }); b(a["state-id"]).keypress(function (a) { if (13 == a.which) return !1 }); b(a["city-id"]).keypress(function (a) { if (13 == a.which) return !1 }); b(a["country-id"]).change(function () { var d = trimString(b(this).val()); c.ISEAddressFinder("removeErrorTagsOnAddressControl", a); c.ISEAddressFinder("optionalPostalCodeHandler", { postalId: a["postal-id"], statePlaceHolder: a["city-state-place-holder"], cityStatesId: a["city-states-id"], country: d, isOnInit: !1, params: a }); return !1 }) }, resetPostalCodePlaceHoder: function (a) { if (b(a["postal-id"]).hasClass("is-postal-optional")) return !1; b(a["country-id"]).val(); var c = [b(a["postal-id"]).val(), a["city-state-place-holder"], a["enter-postal-label-place-holder"], a["postal-id"]]; $this.ISEAddressFinder("isCityStatesVisible", c); b(a["state-id"]).val(""); b(a["city-id"]).val(""); b(a["state-id"]).removeClass("state-not-found"); b(a["state-id"]).removeClass("required-input"); b(a["city-id"]).removeClass("required-input"); var d = c = ""; switch (a["city-id"]) { case "#BillingAddressControl_txtCity": c = "#BillingAddressControl_lblCity"; d = "#BillingAddressControl_lblState"; break; case "#ShippingAddressControl_txtCity": c = "#ShippingAddressControl_lblCity"; d = "#ShippingAddressControl_lblState"; break; default: c = "#AddressControl_lblCity", d = "#AddressControl_lblState" } b(c).removeClass("display-none"); b(d).removeClass("display-none") }, optionalPostalCodeHandler: function (a) { var c = b(a.postalId), d = b.trim(a.country); if ("undefined" == typeof c || "undefined" == typeof d || "" == d) return !1; var e = c.attr("data-postalIsOptionalIn"), d = b(this).ISEAddressFinder("isPostalCodeOptional", { postalIsOptionalIn: e, country: d }), e = c.attr("data-labeltext"), e = b.trim(e), f = "", g = "enter-postal-label-place-holder"; "billing-city-states" == a.cityStatesId && (f = "Billing", g = "billing-enter-postal-label-place-holder"); "shipping-city-states" == a.cityStatesId && (f = "Shipping", g = "shipping-enter-postal-label-place-holder"); !1 == a.isOnInit && c.val(""); b("#" + f + "AddressControl_lblPostal").removeClass("display-none"); c.attr("data-isOptional", d); d ? (c.parent("span").children("label").html(e + " (optional)"), c.addClass("is-postal-optional"), b("#" + g).removeClass("enter-postal-message-width"), SkipValidationOnPostal(f, !1)) : (c.parent("span").children("label").html(e), c.removeClass("is-postal-optional"), !1 == a.isOnInit && b(this).ISEAddressFinder("resetPostalCodePlaceHoder", a.params)) }, isPostalCodeOptional: function (a) { var c = b.trim(a.postalIsOptionalIn); a = b.trim(a.country); var d = c.split(","); return "" == a ? !1 : 0 < d.length ? IsInArray(d, a) : a == c }, isCityStatesVisible: function (a) { b(this); var c = b(a[1]).css("display"), c = c.toLowerCase(); if ("" != a[0] || "none" == c && "" == c) b(a[2]).removeClass("enter-postal-message-width"); else return b(a[1]).fadeOut("Slow", function () { b(a[2]).html(b.trim(ise.StringResource.getString("customersupport.aspx.40"))); b(a[2]).addClass("enter-postal-message-width"); b(a[3]).removeClass("skip"); b("#ise-message-tips").fadeOut("fast") }), !1; return "none" != c || "" == c ? !1 : !0 }, isPostalFormatInvalid: function (a) { a = b.extend({ country: "", postal: "" }, a); var c = b(this).ISEAddressFinder("getCountryPostalFormats", a.country), d = a.postal; a = c.split("-"); if (0 < a.length && "free-form" != c) if (c = d.split("-"), global_postal = c[0], 1 < c.length) { if (c.length != a.length) return !0; for (d = 0; d < c.length; d++) { var e = c[d].length; if (e != a[d].length || 0 == e) return !0 } } else { if (global_postal = d, 0 == d.length || d.length != a[0].length) return !0 } else global_postal = d; return !1 }, isCountrySearchable: function (a) { a = b.extend({ "country-id": "", "selected-index": "" }, a); var c = b(a["country-id"]).attr("class"); if ("undefined" == typeof c || "" == c) return !1; a = c.split(" ")[0].split("-")[a["selected-index"]]; a = a.split("::"); if (1 >= a.length) return !1; a = a[1]; return "undefined" == typeof a || "" == a || "false" == a.toLowerCase() ? !1 : !0 }, isCountryHasState: function (a) { a = b.extend({ "country-id": "", "selected-index": "" }, a); a = b(a["country-id"]).attr("class").split(" ")[0].split("-")[a["selected-index"]]; a = a.split("::"); return 1 > a.length || "false" == a[0].toLowerCase() ? !1 : !0 }, getCountryPostalFormats: function (a) { [].push("united states of america"); var b = []; b.push("12345-6789"); return "united states of america" != a.toLowerCase() ? "free-form" : b[0] }, highlightsError: function (a) { a = b.extend({ "control-id": "", "error-type": "", focus: !1, "enter-caption-place-holder-id": "" }, a); switch (a["error-type"]) { case "invalid-postal-format": b(a["control-id"]).addClass("invalid-postal"), b(a["enter-caption-place-holder-id"]).html(ise.StringResource.getString("customersupport.aspx.40")) } }, bindCityStateOnChange: function (a) { var c = b.extend({ "city-states-id": "billing-city-states", "city-state-place-holder": ".zip-city-other-place-holder" }, a); b("#" + c["city-states-id"]).change(function () { var a = b(this); "other" == a.val().toLowerCase() && a.fadeOut("Slow", function () { b(c["city-state-place-holder"]).fadeIn("Slow"); var e = b("#" + c["city-states-id"] + " option:first").val().split(","), e = 1 < e.length ? b.trim(e[0]) : ""; a.ISEAddressFinder("displayCityStateInputBox", c["city-states-id"], e) }) }) }, displayCityStateInputBox: function (a, c) { var d = "#AddressControl_txtCity", e = "#AddressControl_txtState", f = "#AddressControl_lblState", g = "AddressControl"; "billing-city-states" == a && (d = "#BillingAddressControl_txtCity", e = "#BillingAddressControl_txtState", f = "#BillingAddressControl_lblState", g = "BillingAddressControl"); "shipping-city-states" == a && (d = "#ShippingAddressControl_txtCity", e = "#ShippingAddressControl_txtState", f = "#ShippingAddressControl_lblState", g = "ShippingAddressControl"); b(d).removeClass("city-width-if-no-state"); b(d).removeClass("required-input"); b(e).removeAttr("disabled"); b(e).removeClass("display-none"); b(e).removeClass("control-disabled"); "" != c ? (b(e).val(c), b(f).addClass("display-none")) : (b(e).val(""), b(f).removeClass("display-none")); b(e).addClass("skip"); HideStateInputBoxForCountryWithState(g) }, renderCityState: function (a) { var c = b(this), d = b(a["country-id"]).val(), e = b(a["postal-id"]).val(); c.ISEAddressFinder("isCityStatesVisible", [e, a["city-state-place-holder"], a["enter-postal-label-place-holder"], a["postal-id"]]) && (c.ISEAddressFinder("isPostalFormatInvalid", { country: d, postal: e }) ? c.ISEAddressFinder("highlightsError", { "control-id": a["postal-id"], "error-type": "invalid-postal-format", focus: !0, "enter-caption-place-holder-id": a["enter-postal-label-place-holder"] }) : (b(a["postal-id"]).removeClass("invalid-postal"), c.ISEAddressFinder("searchForCityAndState", a))) }, searchForCityAndState: function (a) { var c = {}; c.countryCode = b(a["country-id"]).val(); c.postalCode = global_postal; c.stateCode = b(a["state-id"]).val(); AjaxCallCommon("ActionService.asmx/GetCity", c, function (c) { b(a["postal-id"]).removeClass("current-object-on-focus"); if ("" != c.d && "no-active-postal" != c.d) { var e = "<select id='" + a["city-states-id"] + "' class='light-style-input'>", e = e + c.d, e = e + ("<option value='other'>" + ise.StringResource.getString("customersupport.aspx.41") + "</option>"), e = e + "</select>"; b(a["city-state-place-holder"]).fadeOut("Slow", function () { b(a["enter-postal-label-place-holder"]).html(e) }); b(a["postal-id"]).removeClass("invalid-postal-zero"); b(a["postal-id"]).removeClass("undefined-city-states"); b("#ise-message-tips").fadeOut("slow"); b(this).ISEAddressFinder("bindCityStateOnChange", { "city-states-id": a["city-states-id"], "city-state-place-holder": a["city-state-place-holder"] }) } else { var f = b(a["country-id"]).prop("selectedIndex"); if ($this.ISEAddressFinder("isCountrySearchable", { "country-id": a["country-id"], "selected-index": f }) && "no-active-postal" != c.d && !b(a["postal-id"]).hasClass("skip")) b(a["enter-postal-label-place-holder"]).html(ise.StringResource.getString("customersupport.aspx.40")), b(a["postal-id"]).addClass("invalid-postal-zero"); else if ("undefined" == typeof b(a["city-states-id"]).val()) { b(a["city-state-place-holder"]).fadeIn("Slow"); c = ""; switch (a["state-id"]) { case "#ShippingAddressControl_txtState": citystatesId = "shipping-city-states"; c = "ShippingAddressControl_lblState"; break; case "#BillingAddressControl_txtState": citystatesId = "billing-city-states"; c = "BillingAddressControl_lblState"; break; default: citystatesId = "city-states", c = "AddressControl_lblState" } b(a["enter-postal-label-place-holder"]).html("<input type='hidden' id='" + citystatesId + "' value='other'/>"); $this.ISEAddressFinder("isCountryHasState", { "country-id": a["country-id"], "selected-index": f }) ? (b(a["state-id"]).removeClass("display-none"), b(a["city-id"]).removeClass("city-width-if-no-state")) : (b("#" + c).addClass("display-none"), b(a["state-id"]).val(""), b(a["state-id"]).addClass("display-none"), b(a["city-id"]).addClass("city-width-if-no-state"), b(a["city-id"]).focus()) } else b(a["city-states-id"]).fadeOut("Slow", function () { b(a["city-state-place-holder"]).fadeIn("Slow") }) } }, function (a) { console.log(a.d) }) }, verifyStateCode: function (a) { var c = {}; c.countryCode = b(a["country-id"]).val(); c.postalCode = b(a["postal-id"]).val(); c.stateCode = b(a["state-id"]).val(); AjaxCallCommon("ActionService.asmx/IsStateCodeValid", c, function (c) { !1 == c.d ? b(a["state-id"]).addClass("state-not-found") : b(a["state-id"]).removeClass("state-not-found"); return c.d }, function () { return 0 }) }, lookForCorrectPostal: function (a) { b.extend({ country: "", state: "", postal: "", "city-id": "", "postal-id": "", "state-id": "" }, a); _IsAddressVerificationAtShippingPostal = !0; showPostalSearchEngineDialog(postalCode, state, country, 1); addressDialogControlsInit() }, removeErrorTagsOnAddressControl: function (a) { b(a["city-id"]).removeClass("required-input"); b(a["city-id"]).removeClass("current-object-on-focus"); b(a["state-id"]).removeClass("required-input"); b(a["state-id"]).removeClass("state-not-found"); b(a["state-id"]).removeClass("current-object-on-focus"); b(a["postal-id"]).removeClass("required-input"); b(a["postal-id"]).removeClass("invalid-postal"); b(a["postal-id"]).removeClass("current-object-on-focus"); b(a["postal-id"]).removeClass("state-not-found"); b(a["postal-id"]).removeClass("invalid-postal-zero"); b(a["postal-id"]).removeClass("state-not-found"); b(a["postal-id"]).removeClass("undefined-city-states"); b(a["postal-id"]).removeClass("skip-getting-city"); b("#ise-message-tips").fadeOut("slow") } }; b.fn.ISEAddressFinder = function (a) { if (f[a]) return f[a].apply(this, Array.prototype.slice.call(arguments, 1)); if ("object" !== typeof a && a) b.error("Method " + a + " does not exist on jQuery.tooltip"); else return f.init.apply(this, arguments) } })(jQuery); function VerifyUserAddress(b) { if (b.isCreateAccount) return RequestAddressMatch(b), !1 } function ParsedCityState(b, f, a) { var c = {}; c.City = f; c.State = a; "other" != b && (b = b.split(","), 1 < b.length ? (c.State = b[0], c.City = b[1]) : (c.State = "", c.City = b[0])); return c } function showSuggestedAddressDialog(b) { b.billing.isNew ? ($newBillingAddress.removeClass("control-caption-disabled"), $newBillingCityStatePostal.removeClass("control-caption-disabled"), $useSuggestedBilling.removeClass("control-caption-disabled").removeAttr("disabled")) : ($newBillingAddress.addClass("control-caption-disabled"), $newBillingCityStatePostal.addClass("control-caption-disabled"), $useSuggestedBilling.addClass("control-caption-disabled").attr("disabled", "disabled")); b.shipping.isNew ? ($newShippingAddress.removeClass("control-caption-disabled"), $newShippingCityStatePostal.removeClass("control-caption-disabled"), $useSuggestedShipping.removeClass("control-caption-disabled").removeAttr("disabled")) : ($newShippingAddress.addClass("control-caption-disabled"), $newShippingCityStatePostal.addClass("control-caption-disabled"), $useSuggestedShipping.addClass("control-caption-disabled").attr("disabled", "disabled")); var f = $("#use-my-billing"), a = $("#use-my-shipping"); $("#use-suggested-billing"); $("#use-suggested-shipping"); b.isError && ($newBillingAddress.html(b.gatewayError).addClass("error-place-holder"), $newShippingAddress.html(b.gatewayError).addClass("error-place-holder"), $useSuggestedBilling.parent("li").addClass("display-none"), $useSuggestedShipping.parent("li").addClass("display-none"), f.attr("checked", "checked"), a.attr("checked", "checked")) } function GetAddressRequestGatewayError(b) { b = b.d.split("[error]"); return 1 < b.length ? $.trim(b[1]) : "" } function IsPostalInputBoxOptional(b) { return ("BillingAddressControl_txtPostal" != b || "ShippingAddressControl_txtPostal" != b || "AddressControl_txtPostal" == b) && $("#" + b).hasClass("is-postal-optional") } function IsWithStates(b) { b = $("#" + b); var f = b.attr("class"), a = ""; if ("undefined" != typeof f) { b = f.split(" ")[0].split("-")[b.prop("selectedIndex")]; b = b.split("::"); if (1 > b.length) return !1; a = b[0] } return "undefined" == typeof a || "" == a ? !0 : "true" == a.toLowerCase() } function IsSearchable(b) { b = $("#" + b); var f = b.attr("class"); if ("undefined" == typeof f || "" == f) return !1; b = f.split(" ")[0].split("-")[b.prop("selectedIndex")]; b = b.split("::"); if (1 >= b.length) return !1; b = b[1]; return "undefined" == typeof b || "" == b ? !1 : "true" == b.toLowerCase() } function IsResidentialAddress(b) { return "undefined" == typeof b || "" == b ? !1 : "residential" == b.toLowerCase() };