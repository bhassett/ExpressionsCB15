var _imRegistered = !1, _finalButtonText = ""; $(document).ready(function () { InitPageContent(); InitCreditCardInfo(); InitPlugIn(); EventsListener(); LoadCheckoutStringResources(); LoadCheckoutRequiredAppConfiguration(function () { }) }); function LoadCheckoutRequiredAppConfiguration(a) { var b = []; b.push("VAT.ShowTaxFieldOnRegistration"); b.push("RequireOver13Checked"); b.push("AllowShipToDifferentThanBillTo"); b.push("AllowCustomerDuplicateEMailAddresses"); b.push("VAT.Enabled"); b.push("UseShippingAddressVerification"); b.push("RequireTermsAndConditionsAtCheckout"); b.push("SagePay.PaymentTerm"); ise.Configuration.loadResources(b, a) } function LoadCheckoutStringResources() { var a = []; a.push("createaccount.aspx.94"); a.push("createaccount.aspx.123"); a.push("checkout1.aspx.9"); a.push("checkout1.aspx.45"); a.push("checkout1.aspx.46"); a.push("checkout1.aspx.47"); a.push("checkout1.aspx.48"); a.push("selectaddress.aspx.6"); a.push("checkoutpayment.aspx.5"); a.push("checkoutshipping.aspx.9"); a.push("checkoutshipping.aspx.10"); a.push("checkoutshipping.aspx.11"); a.push("checkoutshipping.aspx.12"); a.push("customersupport.aspx.15"); a.push("customersupport.aspx.16"); a.push("customersupport.aspx.17"); a.push("customersupport.aspx.18"); a.push("customersupport.aspx.23"); a.push("customersupport.aspx.24"); a.push("customersupport.aspx.38"); a.push("customersupport.aspx.39"); a.push("customersupport.aspx.40"); a.push("customersupport.aspx.41"); a.push("selectaddress.aspx.7"); a.push("selectaddress.aspx.10"); a.push("selectaddress.aspx.11"); a.push("checkoutpayment.aspx.25"); a.push("checkoutpayment.aspx.65"); ise.StringResource.loadResources(a, function () { }) } function EventsListener() { $("#im-over-13-years-of-age").click(function () { $("#ise-message-tips").fadeOut("slow"); $(this).removeClass("required-input") }); $("#ise-message-tips").click(function () { $("#ise-message-tips").fadeOut("slow") }); $("#checkoutpayment-submit-button").click(function () { if ("true" == ise.Configuration.getConfigValue("RequireTermsAndConditionsAtCheckout")) { var a = Boolean($("#ctrlPaymentTerm_hidNoPaymentRequired").val()); $("#ctrlPaymentTerm_termsAndConditionsChecked").is(":checked") || a ? CompletePurchase() : ShowTermsAndConditionsMessage() } else CompletePurchase() }) } function InitPageContent() { var a = $(".is-primary-address").val(); "undefined" != typeof $("input[name='credit-card-code']").val() ? GetCreditCardInfo(a, !0, "") : "undefined" != typeof a && GetCreditCardInfo(a, !1, ""); IsAnonymousUser() ? ($("#billing-address-grid").addClass("display-none"), $("#billing-details-place-holder").addClass("display-none")) : ($("#billing-address-grid").removeClass("display-none"), $("#billing-details-place-holder").removeClass("display-none")) } function CompletePurchase() { if (IsAnonymousUser()) return $("#btnDoProcessPayment").trigger("click"), !0; var a = function () { "Credit Card" == $("input[name='ctrlPaymentTerm$']:checked").attr("pm") ? ValidateBillingAddress() : $("#btnDoProcessPayment").trigger("click") }; if ("Credit Card" != $("input[name='ctrlPaymentTerm$']:checked").attr("pm")) { var b = $("input[name='credit-card-code']").val(); "undefined" != typeof b ? GetCreditCardInfo(b, !0, a) : GetCreditCardInfo($("input[name = 'multiple-billing-address']").val(), !1, a) } else a() } function IsAnonymousUser() { return "false" == $.trim($("#isRegistered").html()).toLowerCase() ? !0 : !1 } function ClearCreditCardInfo(a, b) { var d = JSON.stringify({ cardCode: a }); $.ajax({ type: "POST", url: "ActionService.asmx/ClearCreditCardInfo", data: d, contentType: "application/json; charset=utf-8", dataType: "json", success: function (a) { $("#" + b + "-credit-card-type").html("---"); $("#" + b + "-credit-card-expiry").html("---"); $("#" + b + "-credit-card-clear").html("---"); $("#" + b + "-credit-card-description").html(""); DisableControlPayment(!1) }, fail: function (a) { } }) } function InitCreditCardInfo() { CreditInfoEventHandlers(); IsAnonymousUser() || ShowBillingAddress(""); CreditCardPanelStyles_Workaround() } function CreditInfoEventHandlers() { $("input[name='ctrlPaymentTerm$']").click(function () { IsAnonymousUser() || ShowBillingAddress($(this).attr("pm")) }); $("input[name='credit-card-code']").click(function () { GetCreditCardInfo($(this).val(), !0, "") }); $("input[name = 'multiple-billing-address']").click(function () { GetCreditCardInfo($(this).val(), !1, "") }); $(".opc-clearcard").click(function () { var a = $(this).attr("id").split("::"); ClearCreditCardInfo(a[1], a[2]) }) } function ShowBillingAddress(a) { $("#ise-message-tips").fadeOut("fast"); "" == a && (a = $("input[name='ctrlPaymentTerm$']:checked").attr("pm")); var b = $("input[name='ctrlPaymentTerm$']:checked").attr("pr"); "Credit Card" == a && b != ise.Configuration.getConfigValue("SagePay.PaymentTerm") ? "true" == $.trim($("#isTokenization").html()).toLowerCase() ? $("#credit-card-options").slideDown("slow", function () { $("#billing-details-place-holder").slideDown("slow"); $("#divSaveCardInfo").removeClass("display-none") }) : $("#pnlBillingAddressGrid").slideDown("slow", function () { $("#billing-details-place-holder").slideDown("slow") }) : "true" == $.trim($("#isTokenization").html()).toLowerCase() ? $("#credit-card-options").slideUp("slow", function () { $("#billing-details-place-holder").slideUp("slow"); $("#divSaveCardInfo").addClass("display-none") }) : $("#pnlBillingAddressGrid").slideUp("slow", function () { $("#billing-details-place-holder").slideUp("slow") }) } function CreditCardPanelStyles_Workaround() { return;$(".RedirectPaymentMethodPanel > tbody > tr > td").css("border", "0"); $(".RedirectPaymentMethodPanel > tbody > tr > td > span").addClass("strong-font"); $("#ctrlPaymentTerm_nameOnCard").addClass("light-style-input"); $("#ctrlPaymentTerm_cardNumber").addClass("light-style-input"); $("#ctrlPaymentTerm_cvv").addClass("light-style-input"); $("#ctrlPaymentTerm_cardType").addClass("light-style-input"); $("#ctrlPaymentTerm_expirationMonth").addClass("light-style-input"); $("#ctrlPaymentTerm_expirationYear").addClass("light-style-input"); "undefined" != typeof $("#ctrlPaymentTerm_startMonth") && $("#ctrlPaymentTerm_startMonth").addClass("light-style-input"); "undefined" != typeof $("#ctrlPaymentTerm_startYear") && $("#ctrlPaymentTerm_startYear").addClass("light-style-input") } function ValidateBillingAddress() { $("#ise-message-tips").fadeOut("fast"); if (!IsBillingInfoGood() || !IsBillingAddressGood()) return !1; var a = "", b = $("#BillingAddressControl_drpCountry").val(), d = $("#BillingAddressControl_txtPostal").val(), a = $("#billing-city-states").val(); if ("undefined" == typeof a || "other" == a) billingCity = $("#BillingAddressControl_txtCity").val(), a = $("#BillingAddressControl_txtState").val(); else { var e = a.split(", "); 1 < e.length ? (a = e[0], billingCity = e[1]) : (a = "", billingCity = e[0]) } e = "checked" == $("#im-over-13-years-of-age").attr("checked"); IsBillingInfoCorrect(b, d, a, e) } function IsBillingInfoCorrect(a, b, d, e) { var c = {}; c.countryCode = a; c.postalCode = b; c.stateCode = d; c.isWithRequiredAge = e; AjaxCallCommon("ActionService.asmx/IsBillingInfoCorrect", c, function (a) { if ("valid" == a.d || $("#BillingAddressControl_txtPostal").hasClass("skip")) return ShowProcessMessage(ise.StringResource.getString("checkout1.aspx.47"), "payment-form-error-container", "save-billing-method-loader", "billing-method-button"), a = function () { var a = $("#billing-city-states").val(); "other" != a && $("#txtCityStates").val(a); $("#btnDoProcessPayment").trigger("click"); 0 < $("#errorSummary_Board_Errors").children("li").length && ShowFailedMessage("", "payment-form-error-container", "save-billing-method-loader", "billing-method-button") }, "undefined" != typeof $.fn.RealTimeAddressVerification ? $.fn.RealTimeAddressVerification.requestAddressMatch(a) : a(), !0; if ("valid" != a.d) switch (a.d) { case "invalid-postal": $("#BillingAddressControl_txtPostal").addClass("invalid-postal-zero"); $("#BillingAddressControl_txtPostal").focus(); ShowFailedMessage("", "payment-form-error-container", "save-billing-method-loader", "billing-method-button"); break; case "invalid-state": $("#BillingAddressControl_txtState").addClass("state-not-found"); $("#BillingAddressControl_txtState").focus(); ShowFailedMessage("", "payment-form-error-container", "save-billing-method-loader", "billing-method-button"); break; case "required-over-13": if ("undefined" != typeof $("#im-over-13-years-of-age").attr("name")) { $("#im-over-13-years-of-age").addClass("required-input"); a = $("#im-over-13-years-of-age").offset().left; var b = $("#im-over-13-years-of-age").offset().top; $("#ise-message-tips").css("top", b - 47); $("#ise-message-tips").css("left", a - 17); $("#ise-message").html(ise.StringResource.getString("createaccount.aspx.123")); $("#ise-message-tips").fadeIn("slow"); ShowFailedMessage("", "payment-form-error-container", "save-billing-method-loader", "billing-method-button") } else $("#btnDoProcessPayment").trigger("click"); break; default: ShowFailedMessage(a.d, "payment-form-error-container", "save-billing-method-loader", "billing-method-button") } }, function (a) { ShowFailedMessage(a.d, "payment-form-error-container", "save-billing-method-loader", "billing-method-button") }) } function RegisterThisCustomerShippingMethod(a) { a = $.parseJSON(a); for (var b = 0; b < a.length; b++) ise.StringResource.registerString(a[b].Key, a[b].Value) } function IsBillingInfoGood() { $("#ise-message-tips").fadeOut("slow"); var a = 0, b = !1, d = !1, e = "", c = []; c.push("#spare"); c.push("#txtBillingContactName"); c.push("#txtBillingContactNumber"); c.push("#BillingAddressControl_txtStreet"); c.push("#BillingAddressControl_txtCity"); c.push("#BillingAddressControl_txtState"); c.push("#BillingAddressControl_txtPostal"); $(".requires-validation").each(function () { var f = "#" + $(this).attr("id"), h = jQuery.inArray(f, c), g = trimString($(this).val()); if ("" == g && 0 < h) { d = !1; var k = $(".billing-zip-city-other-place-holder").css("display"); "#BillingAddressControl_txtCity" == f && ("none" == k ? d = !0 : (d = !0, "" == g && (d = !1))); "#BillingAddressControl_txtState" == f && (k = $(".billing-zip-city-other-place-holder").css("display"), f = IsCountryWithStates("#BillingAddressControl_drpCountry"), "none" == k || "false" == f ? d = !0 : (d = !0, "" == g && (d = !1))); g = $(this).attr("id"); IsPostalInputBoxOptional(g) && (d = !0); !1 == d && 0 < h && ($(this).removeClass("current-object-on-focus"), $(this).addClass("required-input"), 0 == a && (e = f = "#" + $(this).attr("id"), $(this).addClass("current-object-on-focus")), b = !0, a++) } }); return b ? (IsBillingAddressControlHidden() || $(e).focus(), !1) : "undefined" == typeof $("#billing-city-states").val() ? (IsBillingAddressControlHidden() || $("#BillingAddressControl_txtPostal").focus(), !1) : !0 } function IsBillingAddressControlHidden() { return "none" == $("#billing-details-place-holder").css("display") ? ($("#billing-details-place-holder").css("display", ""), !0) : !1 } function UpdateBillingInfoFormValues(a, b, d, e) { var c = "", f = "", h = "", g = e = "", k = "", l = "", m = ""; a && (c = b.NameOnCard, f = b.PhoneNumber, h = b.Address, e = b.City, g = b.State, k = b.Postal, l = b.Country, m = b.County); $("#BillingAddressControl_drpCountry").val(l); "" != c && ($("#txtBillingContactName").val(c), $("#lblBillingContactName").addClass("display-none")); "" != f && ($("#txtBillingContactNumber").val(f), $("#lblBillingContactNumber").addClass("display-none")); "" != h && ($("#BillingAddressControl_txtStreet").val(h), $("#BillingAddressControl_lblStreet").addClass("display-none")); a = $("#BillingAddressControl_txtPostal"); b = $("#BillingAddressControl_lblPostal"); c = a.attr("data-postalIsOptionalIn"); l = $(this).ISEAddressFinder("isPostalCodeOptional", { postalIsOptionalIn: c, country: l }); a.attr("data-isOptional", l); c = a.attr("data-labeltext"); c = $.trim(c); l ? (a.addClass("is-postal-optional"), b.html(c + " (optional)")) : (a.removeClass("is-postal-optional"), b.html(c)); "" != k ? (a.val(k), b.addClass("display-none")) : l && (a.val(""), b.removeClass("display-none")); $("#shipping-city-states").val(); "" != e ? ($("#BillingAddressControl_txtCity").val(e), $("#BillingAddressControl_lblCity").addClass("display-none")) : $("#BillingAddressControl_lblCity").removeClass("display-none"); "" != g ? ($("#BillingAddressControl_txtState").val(g), $("#BillingAddressControl_txtState").removeClass("display-none"), $("#BillingAddressControl_lblState").addClass("display-none"), $("#BillingAddressControl_txtCity").removeClass("city-width-if-no-state")) : ($("#BillingAddressControl_txtState").val(""), $("#BillingAddressControl_lblState").removeClass("display-none"), d && ($("#BillingAddressControl_lblState").addClass("display-none"), $("#BillingAddressControl_txtState").addClass("display-none"), $("#BillingAddressControl_txtCity").addClass("city-width-if-no-state"))); "undefined" != typeof $("#BillingAddressControl_txtCounty").val() && ("" != m ? ($("#BillingAddressControl_lblCounty").addClass("display-none"), $("#BillingAddressControl_txtCounty").val(m)) : ($("#BillingAddressControl_txtCounty").val(m), $("#BillingAddressControl_lblCounty").removeClass("display-none"))); $(".billing-zip-city-other-place-holder").fadeIn("Slow"); $("#billing-enter-postal-label-place-holder").html("<input type='hidden' value='other' id='billing-city-states'>") } function IsBillingAddressGood() { var a = $("#BillingAddressControl_txtPostal"), b = $(".billing-zip-city-other-place-holder").css("display"), b = b.toLowerCase(), d = $("#BillingAddressControl_drpCountry").val(), e = $.trim(a.val()), c = IsCountrySearchable("#BillingAddressControl_drpCountry"), f = !0, h = !1, a = a.hasClass("is-postal-optional") && "" == e; if ("true" == c && !1 == a) { if (h = IsPostalFormatInvalid(d, e)) $("#BillingAddressControl_txtPostal").addClass("invalid-postal"), "none" == b && $("#billing-enter-postal-label-place-holder").html(ise.StringResource.getString("customersupport.aspx.40")), IsBillingAddressControlHidden() || $("#BillingAddressControl_txtPostal").focus(), f = !1; if (!f) return !1 } return !0 } function GetCreditCardInfo(a, b, d) { a = JSON.stringify({ cardCode: a }); $.ajax({ type: "POST", url: "ActionService.asmx/GetCreditCardInfo", data: a, contentType: "application/json; charset=utf-8", dataType: "json", success: function (a) { "" != a.d && ($("#txtCode").val(a.d.CreditCardCode), $("#ctrlPaymentTerm_nameOnCard").val(a.d.NameOnCard), UpdateBillingInfoFormValues(!0, a.d, !0, !1), b && (AssignValueToControlPayment(a.d), "" != a.d.CardNumber && 0 != a.d.RefNo ? DisableControlPayment(!0) : DisableControlPayment(!1))); "undefined" != typeof d && "" != d && d() }, fail: function (a) { } }) } function AssignValueToControlPayment(a) { $("#ctrlPaymentTerm_cardNumber").val(a.CardNumber); $("#ctrlPaymentTerm_cardType").val(a.CardType); $("#ctrlPaymentTerm_expirationMonth").val(a.ExpMonth); $("#ctrlPaymentTerm_expirationYear").val(a.ExpYear); $("#ctrlPaymentTerm_cardDescription").val(a.Description); $("#credit-card-masked").html("cardNumber"); "undefined" != typeof $("#ctrlPaymentTerm_startMonth") && $("#ctrlPaymentTerm_startMonth").val(a.StartMonth); "undefined" != typeof $("#ctrlPaymentTerm_startYear") && $("#ctrlPaymentTerm_startYear").val(a.StartYear); $("#hidMaskCardNumber").val(a.CardNumber); $("#hidCreditCardCode").val(a.CreditCardCode) } function DisableControlPayment(a) { a ? ($("#ctrlPaymentTerm_nameOnCard").attr("readonly", "true"), $("#ctrlPaymentTerm_nameOnCard").addClass("control-disabled"), $("#ctrlPaymentTerm_cardNumber").attr("readonly", "true"), $("#ctrlPaymentTerm_cardNumber").addClass("control-disabled"), $("#ctrlPaymentTerm_cardType").attr("disabled", "disabled"), $("#ctrlPaymentTerm_cardType").addClass("control-disabled"), $("#ctrlPaymentTerm_expirationMonth").attr("disabled", "disabled"), $("#ctrlPaymentTerm_expirationMonth").addClass("control-disabled"), $("#ctrlPaymentTerm_expirationYear").attr("disabled", "disabled"), $("#ctrlPaymentTerm_expirationYear").addClass("control-disabled"), $("#ctrlPaymentTerm_cvv").attr("readonly", "true"), $("#ctrlPaymentTerm_cvv").addClass("control-disabled"), "undefined" != typeof $("#ctrlPaymentTerm_startMonth") && ($("#ctrlPaymentTerm_startMonth").attr("disabled", "disabled"), $("#ctrlPaymentTerm_startMonth").addClass("control-disabled")), "undefined" != typeof $("#ctrlPaymentTerm_startYear") && ($("#ctrlPaymentTerm_startYear").attr("disabled", "disabled"), $("#ctrlPaymentTerm_startYear").addClass("control-disabled")), $("#ctrlPaymentTerm_cvv").parent("td").parent("tr").addClass("display-none")) : ($("#ctrlPaymentTerm_cardNumber").val(""), $("#ctrlPaymentTerm_cardType").val(""), $("#ctrlPaymentTerm_expirationMonth").val(""), $("#ctrlPaymentTerm_expirationYear").val(""), $("#ctrlPaymentTerm_cardDescription").val(""), $("#ctrlPaymentTerm_nameOnCard").removeAttr("readonly"), $("#ctrlPaymentTerm_nameOnCard").removeClass("control-disabled"), $("#ctrlPaymentTerm_cardNumber").removeAttr("readonly"), $("#ctrlPaymentTerm_cardNumber").removeClass("control-disabled"), $("#ctrlPaymentTerm_cardType").removeAttr("disabled"), $("#ctrlPaymentTerm_cardType").removeClass("control-disabled"), $("#ctrlPaymentTerm_expirationMonth").removeAttr("disabled"), $("#ctrlPaymentTerm_expirationMonth").removeClass("control-disabled"), $("#ctrlPaymentTerm_expirationYear").removeAttr("disabled"), $("#ctrlPaymentTerm_expirationYear").removeClass("control-disabled"), $("#ctrlPaymentTerm_cvv").removeAttr("readonly"), $("#ctrlPaymentTerm_cvv").removeClass("control-disabled"), $("#credit-card-masked").html(""), "undefined" != typeof $("#ctrlPaymentTerm_startMonth") && ($("#ctrlPaymentTerm_startMonth").removeAttr("disabled"), $("#ctrlPaymentTerm_startMonth").removeClass("control-disabled")), "undefined" != typeof $("#ctrlPaymentTerm_sStartYear") && ($("#ctrlPaymentTerm_startYear").removeAttr("disabled"), $("#ctrlPaymentTerm_startYear").removeClass("control-disabled")), $("#ctrlPaymentTerm_cvv").parent("td").parent("tr").removeClass("display-none")) } function InitPlugIn() { $("#BillingAddressControl_txtPostal").ISEAddressFinder(); $("#BillingAddressControl_txtStreet").ISEBubbleMessage({ "input-id": "BillingAddressControl_txtStreet", "label-id": "BillingAddressControl_lblStreet" }); $("#BillingAddressControl_txtPostal").ISEBubbleMessage({ "input-id": "BillingAddressControl_txtPostal", "label-id": "BillingAddressControl_lblPostal", "input-mode": "billing-postal", "address-type": "Billing" }); $("#BillingAddressControl_txtCity").ISEBubbleMessage({ "input-id": "BillingAddressControl_txtCity", "label-id": "BillingAddressControl_lblCity" }); $("#BillingAddressControl_txtState").ISEBubbleMessage({ "input-id": "BillingAddressControl_txtState", "label-id": "BillingAddressControl_lblState", "input-mode": "billing-state" }); "undefined" != typeof $("#BillingAddressControl_txtCounty").val() && $("#BillingAddressControl_txtCounty").ISEBubbleMessage({ "input-id": "BillingAddressControl_txtCounty", "label-id": "BillingAddressControl_lblCounty", optional: !0 }); $("#txtBillingContactName").ISEBubbleMessage({ "input-id": "txtBillingContactName", "label-id": "lblBillingContactName" }); $("#txtBillingContactNumber").ISEBubbleMessage({ "input-id": "txtBillingContactNumber", "label-id": "lblBillingContactNumber" }) } function ShowTermsAndConditionsMessage() { $("#ctrlPaymentTerm_termsAndConditionsChecked").addClass("required-input"); var a = $("#ctrlPaymentTerm_termsAndConditionsChecked").offset().left, b = $("#ctrlPaymentTerm_termsAndConditionsChecked").offset().top; $("#ise-message-tips").css("top", b - 47); $("#ise-message-tips").css("left", a - 19); $("#ise-message").html(ise.StringResource.getString("checkoutpayment.aspx.5")); $("#ise-message-tips").fadeIn("slow") };