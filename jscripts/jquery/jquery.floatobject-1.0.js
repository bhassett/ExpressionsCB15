(function (a) { function b(a, b) { this.jqObj = a; switch (b.speed) { case "fast": this.steps = 2; break; case "normal": this.steps = 5; break; case "slow": this.steps = 10; break; default: this.steps = 5 } var c = this.jqObj.offset(); this.currentX = c.left; this.currentY = c.top; this.origX = typeof b.x == "string" ? this.currentX : b.x; this.origY = typeof b.y == "string" ? this.currentY : b.y; this.jqObj.css({ position: "absolute", top: this.currentY, left: this.currentX }) } b.prototype.updateLocation = function () { this.updatedX = a(window).scrollLeft() + this.origX; this.updatedY = a(window).scrollTop() + this.origY; this.dx = Math.abs(this.updatedX - this.currentX); this.dy = Math.abs(this.updatedY - this.currentY); return this.dx || this.dy }; b.prototype.move = function () { if (this.jqObj.css("position") != "absolute") return; var a = 0; var b = 0; if (this.dx > 0) { if (this.dx < this.steps / 2) a = this.dx >= 1 ? 1 : 0; else a = Math.round(this.dx / this.steps); if (this.currentX < this.updatedX) this.currentX += a; else this.currentX -= a } if (this.dy > 0) { if (this.dy < this.steps / 2) b = this.dy >= 1 ? 1 : 0; else b = Math.round(this.dy / this.steps); if (this.currentY < this.updatedY) this.currentY += b; else this.currentY -= b } this.jqObj.css({ left: this.currentX, top: this.currentY }) }; a.floatMgr = { FOArray: new Array, timer: null, initializeFO: function (c, d) { var e = a.extend({ x: 0, y: 0, speed: "fast" }, d || {}); var f = new b(c, e); a.floatMgr.FOArray.push(f); if (!a.floatMgr.timer) a.floatMgr.adjustFO(); if (!a.floatMgr.registeredEvents) { a(window).bind("resize", a.floatMgr.onChange); a(window).bind("scroll", a.floatMgr.onChange); a.floatMgr.registeredEvents = true } }, adjustFO: function () { a.floatMgr.timer = null; var b = false; for (var c = 0; c < a.floatMgr.FOArray.length; c++) { FO = a.floatMgr.FOArray[c]; if (FO.updateLocation()) b = true } if (b) { for (var c = 0; c < a.floatMgr.FOArray.length; c++) { FO = a.floatMgr.FOArray[c]; FO.move() } if (!a.floatMgr.timer) a.floatMgr.timer = setTimeout(a.floatMgr.adjustFO, 50) } }, onChange: function () { if (!a.floatMgr.timer) a.floatMgr.adjustFO() } }; a.fn.makeFloat = function (b) { var c = this.eq(0); a.floatMgr.initializeFO(c, b); if (a.floatMgr.timer == null) a.floatMgr.adjustFO(); return c } })(jQuery)